{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/Config/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport axios from 'axios';\nimport Validaforms from \"../../../componentes/ValidaForms\";\nimport Alert from \"../../../componentes/Alert\";\nimport CompressImage from \"../../../componentes/compress\";\nconst user_id = localStorage.getItem(\"user_id\");\nexport default function Config(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categoria = _useState4[0],\n        setCategoria = _useState4[1];\n\n  const _useState5 = useState('publico'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        privacy = _useState6[0],\n        setPrivacy = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1];\n\n  const _useState9 = useState('Desativado'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        editionON = _useState10[0],\n        setEditionOn = _useState10[1]; // style Erro input\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        validaTitle = _useState12[0],\n        setValidaTitle = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validaDescription = _useState14[0],\n        setValidaDescription = _useState14[1]; // Categorias\n\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        listCategory = _useState16[0],\n        setListCategory = _useState16[1]; // alert\n\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        alertDisplay = _useState18[0],\n        setAlertDisplay = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertContext = _useState20[0],\n        setAlertContext = _useState20[1];\n\n  const _useState21 = useState('primary'),\n        _useState22 = _slicedToArray(_useState21, 2),\n        alertType = _useState22[0],\n        setAlertType = _useState22[1];\n\n  useMemo(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n\n      if (response.data.category === null) {\n        setListCategory(['none']);\n      } else {\n        setListCategory(response.data.category);\n      }\n    } catch (error) {\n      // Tratar erro\n      console.log({\n        error\n      });\n    }\n  }, []);\n  const image = props.data;\n\n  async function handleUpload(e) {\n    e.preventDefault();\n    const vTitle = Validaforms(title, 'titulo', {\n      min: 4,\n      max: 16\n    });\n    const vCategoria = Validaforms(categoria, 'categoria');\n    const vPrivacy = Validaforms(privacy, 'privacidade');\n    const vDescription = Validaforms(description, 'Descrição', {\n      min: 5,\n      max: 300\n    });\n    const vEditionOn = Validaforms(editionON, 'Edição automatica');\n    const validaForm = await ValidaForms([{\n      $campo: title,\n      $nomeCampo: 'username',\n      $rules: {\n        min: 4,\n        max: 12,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: categoria,\n      $nomeCampo: 'email',\n      $rules: {\n        min: 4,\n        max: 32,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: privacy,\n      $nomeCampo: 'password',\n      $rules: {\n        min: 4,\n        max: 12,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: description,\n      $nomeCampo: 'password',\n      $rules: {\n        min: 4,\n        max: 12,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: editionON,\n      $nomeCampo: 'termos',\n      $rules: {\n        type: Boolean,\n        required: false\n      }\n    }]);\n\n    if (!image) {\n      setAlertContext({\n        title: \"Falha ao fazer upload\",\n        messege: \"Imagem invalida\"\n      });\n      setAlertType('fail');\n      setAlertDisplay(true);\n    }\n\n    if (image) {\n      if (image.size >= 3000000) {\n        setAlertContext({\n          title: \"Falha ao fazer upload\",\n          messege: \"O Tamanho da imagem não deve exceder 5mb\"\n        });\n        setAlertType('fail');\n        setAlertDisplay(true);\n      }\n\n      if (alertContext.length === 0) {\n        setValidaTitle(false);\n        setValidaDescription(false);\n      }\n\n      const info = {\n        user_id,\n        title,\n        description,\n        category: categoria,\n        privacy\n      };\n      const result = await CompressImage(image, 1);\n      const baseString = result.data;\n\n      try {\n        const response = await axios.post('http://localhost:3001/api/image', {\n          image: baseString,\n          info\n        });\n        setAlertContext({\n          title: \"Sucesso ao fazer upload\",\n          messege: \"A imagem foi adicionada a sua galeria!\"\n        });\n        setAlertType('sucess');\n        setAlertDisplay(true);\n        console.log(response);\n      } catch (error) {\n        setAlertContext({\n          title: \"Falha ao fazer upload\",\n          messege: \"Tente novamente!\"\n        });\n        setAlertType('fail');\n        setAlertDisplay(true);\n        console.log(\"\".concat(error));\n      }\n    }\n  }\n\n  function handleCancelar(e) {\n    e.preventDefault();\n  } // --------------------------------------------------------------------------------------\n\n\n  console.log(props.name);\n\n  if (props.name === 'option' || !props.name) {\n    return React.createElement(\"div\", {\n      className: \"container-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Titulo da imagem *\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      className: \"f-input\",\n      onChange: event => setTitle(event.target.value),\n      value: title !== '' ? title : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Escolher categoria\"), React.createElement(\"select\", {\n      id: \"category\",\n      onChange: event => setCategoria(event.target.value),\n      value: categoria !== '' ? categoria : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, listCategory ? listCategory.map((item, i) => React.createElement(\"option\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, item)) : '')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"privacy\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Definir privacidade\"), React.createElement(\"select\", {\n      id: \"privacy\",\n      onChange: event => setPrivacy(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"publico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Publico\"), React.createElement(\"option\", {\n      value: \"privado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Privado\"))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(\"button\", {\n      className: \"btn btn-none\",\n      onClick: handleCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Cancelar\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Teve algum problema? tente o \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"upload normal\")), React.createElement(Alert, {\n      type: alertType,\n      title: alertContext.title,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }));\n  }\n\n  if (props.name == 'description') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"container-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Defina um pequeno texto como descri\\xE7\\xE3o para sua imagem *\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      className: \"f-textarea\",\n      onChange: event => setDescription(event.target.value),\n      value: description != '' ? description : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Deixar em branco\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"A descri\\xE7\\xE3o \\xE9 limitada a 300 caracteres, caso n\\xE3o queiera adicionar descri\\xE7\\xE3o, marque a op\\xE7\\xE3o acima.\")), React.createElement(Alert, {\n      title: alertContext.title,\n      type: alertType,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }));\n  }\n\n  if (props.name == 'avancado') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"container-avancado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"editionOn\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Tratamento automatico da imagem\"), React.createElement(\"select\", {\n      id: \"editionOn\",\n      onChange: event => setEditionOn(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Dasativado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Dasativado\"), React.createElement(\"option\", {\n      value: \"Ativado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Ativado\")))), React.createElement(Alert, {\n      type: alertType,\n      title: alertContext.title,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/Config/index.js"],"names":["React","useState","useMemo","axios","Validaforms","Alert","CompressImage","user_id","localStorage","getItem","Config","props","title","setTitle","categoria","setCategoria","privacy","setPrivacy","description","setDescription","editionON","setEditionOn","validaTitle","setValidaTitle","validaDescription","setValidaDescription","listCategory","setListCategory","alertDisplay","setAlertDisplay","alertContext","setAlertContext","alertType","setAlertType","response","get","data","category","error","console","log","image","handleUpload","e","preventDefault","vTitle","min","max","vCategoria","vPrivacy","vDescription","vEditionOn","validaForm","ValidaForms","$campo","$nomeCampo","$rules","type","String","required","Boolean","messege","size","length","info","result","baseString","post","handleCancelar","name","event","target","value","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport axios from 'axios';\n\nimport Validaforms from \"../../../componentes/ValidaForms\";\nimport Alert from \"../../../componentes/Alert\";\nimport CompressImage from \"../../../componentes/compress\";\n\n\n\nconst user_id = localStorage.getItem(\"user_id\");\n\n\nexport default function Config(props) {\n\n    const [title, setTitle] = useState('');\n    const [categoria, setCategoria] = useState('none');\n    const [privacy, setPrivacy] = useState('publico');\n    const [description, setDescription] = useState('');\n    const [editionON, setEditionOn] = useState('Desativado');\n\n    // style Erro input\n    const [validaTitle, setValidaTitle] = useState(false);\n    const [validaDescription, setValidaDescription] = useState(false);\n\n    // Categorias\n    const [listCategory, setListCategory] = useState([])\n\n    // alert\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertContext, setAlertContext] = useState([]);\n    const [alertType, setAlertType] = useState('primary');\n\n    useMemo(async () => {\n        try {\n            const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n            if (response.data.category === null) {\n                setListCategory(['none']);\n            } else {\n                setListCategory(response.data.category);\n            }\n\n        } catch (error) {\n            // Tratar erro\n            console.log({ error })\n        }\n    }, [])\n\n    const image = props.data;\n\n\n        async function handleUpload(e) {\n            e.preventDefault();\n\n            const vTitle = Validaforms(title, 'titulo', { min: 4, max: 16 })\n            const vCategoria = Validaforms(categoria, 'categoria')\n            const vPrivacy = Validaforms(privacy, 'privacidade')\n            const vDescription = Validaforms(description, 'Descrição', { min: 5, max: 300 })\n            const vEditionOn = Validaforms(editionON, 'Edição automatica')\n\n            const validaForm = await ValidaForms([\n                {\n                    $campo: title, $nomeCampo: 'username', $rules: {\n                        min: 4,\n                        max: 12,\n                        type: String,\n                        required: true\n                    }\n                },\n                {\n                    $campo: categoria, $nomeCampo: 'email', $rules: {\n                        min: 4,\n                        max: 32,\n                        type: String,\n                        required: true\n                    }\n                },\n                {\n                    $campo: privacy, $nomeCampo: 'password', $rules: {\n                        min: 4,\n                        max: 12,\n                        type: String,\n                        required: true\n                    }\n                },\n                {\n                    $campo: description, $nomeCampo: 'password', $rules: {\n                        min: 4,\n                        max: 12,\n                        type: String,\n                        required: true\n                    }\n                },\n                {\n                    $campo: editionON, $nomeCampo: 'termos', $rules: {\n                        type: Boolean,\n                        required: false\n                    }\n                },\n    \n            ])\n\n            if (!image) {\n                setAlertContext({\n                    title: \"Falha ao fazer upload\",\n                    messege: \"Imagem invalida\"\n                })\n                setAlertType('fail')\n                setAlertDisplay(true)\n\n            }\n\n\n            if (image) {\n                if (image.size >= 3000000) {\n                    setAlertContext({\n                        title: \"Falha ao fazer upload\",\n                        messege: \"O Tamanho da imagem não deve exceder 5mb\"\n                    })\n                    setAlertType('fail')\n                    setAlertDisplay(true)\n\n                }\n\n                if (alertContext.length === 0) {\n                    setValidaTitle(false)\n                    setValidaDescription(false)\n\n                }\n\n                const info = {\n                    user_id,\n                    title,\n                    description,\n                    category: categoria,\n                    privacy,\n\n                }\n\n                const result = await CompressImage(image, 1);\n\n                const baseString = result.data;\n\n                try {\n                    const response = await axios.post('http://localhost:3001/api/image', { image: baseString, info })\n                    setAlertContext({\n                        title: \"Sucesso ao fazer upload\",\n                        messege: \"A imagem foi adicionada a sua galeria!\"\n                    })\n                    setAlertType('sucess')\n                    setAlertDisplay(true)\n                    console.log(response);\n\n                } catch (error) {\n                    setAlertContext({\n                        title: \"Falha ao fazer upload\",\n                        messege: \"Tente novamente!\"\n                    })\n                    setAlertType('fail')\n                    setAlertDisplay(true)\n                    console.log(`${error}`)\n                }\n            }\n\n        }\n\n    function handleCancelar(e) {\n        e.preventDefault();\n    }\n\n    // --------------------------------------------------------------------------------------\n\n    console.log(props.name)\n\n    if (props.name === 'option' || !props.name) {\n\n        return (\n            <div className=\"container-option\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\" className=\"f-label\">Titulo da imagem *</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        className='f-input'\n                        onChange={event => setTitle(event.target.value)}\n                        value={title !== '' ? title : ''}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\" className=\"f-label\">Escolher categoria</label>\n                    <select\n                        id=\"category\"\n                        onChange={event => setCategoria(event.target.value)}\n                        value={categoria !== '' ? categoria : ''}\n                    >\n                        {listCategory ? listCategory.map((item, i) => (\n                            <option key={i}>{item}</option>\n                        )) : ''}\n                    </select>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"privacy\" className=\"f-label\">Definir privacidade</label>\n                    <select\n                        id=\"privacy\"\n                        onChange={event => setPrivacy(event.target.value)}\n                    >\n                        <option value=\"publico\">Publico</option>\n                        <option value=\"privado\">Privado</option>\n                    </select>\n                </div>\n\n                <div className=\"form-row\">\n                    <button className=\"btn btn-primary\" onClick={handleUpload}>Salvar</button>\n                    <button className=\"btn btn-none\" onClick={handleCancelar}>Cancelar</button>\n                </div>\n\n                <span>Teve algum problema? tente o <a href=\"#\">upload normal</a></span>\n                <Alert\n                    type={alertType}\n                    title={alertContext.title}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n\n\n            </div>\n\n        )\n    }\n\n\n\n    if (props.name == 'description') {\n        return (\n            <>\n                <div className=\"container-description\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\" className=\"f-label\">Defina um pequeno texto como descrição para sua imagem *</label>\n                        <textarea\n                            id=\"description\"\n                            className='f-textarea'\n                            onChange={event => setDescription(event.target.value)}\n                            value={description != '' ? description : ''}\n                        >\n                        </textarea>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <input type=\"checkbox\" />\n                        <span>Deixar em branco</span>\n                    </div>\n                    <span>A descrição é limitada a 300 caracteres, caso não queiera adicionar descrição, marque a opção acima.</span>\n                </div>\n                <Alert\n                    title={alertContext.title}\n                    type={alertType}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n            </>\n        )\n    }\n\n    if (props.name == 'avancado') {\n        return (\n            <>\n                <div className=\"container-avancado\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"editionOn\" className=\"f-label\">Tratamento automatico da imagem</label>\n                        <select id=\"editionOn\"\n                            onChange={event => setEditionOn(event.target.value)}\n                        >\n                            <option value=\"Dasativado\">Dasativado</option>\n                            <option value=\"Ativado\">Ativado</option>\n                        </select>\n                    </div>\n                </div>\n                <Alert\n                    type={alertType}\n                    title={alertContext.title}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n            </>\n        )\n    }\n\n    return <div />\n}"]},"metadata":{},"sourceType":"module"}