{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Zero2\\\\Desktop\\\\projeto\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zero2\\\\Desktop\\\\projeto\\\\frontend\\\\src\\\\pages\\\\Galeria\\\\addCategory\\\\index.js\";\nimport React, { useState } from 'react';\nimport Alert from '../../../componentes/Alert';\nimport './style.css';\nexport default function AddCategory(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCategory = _useState2[0],\n        setNewCategory = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertDisplay = _useState4[0],\n        setAlertDisplay = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertMessege = _useState6[0],\n        setAlertMessege = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertTitle = _useState8[0],\n        setAlertTitle = _useState8[1];\n\n  async function handleCategory(e) {\n    e.preventDefault();\n\n    if (!newCategory || typeof newCategory === 'undefined' || newCategory === null || newCategory === '') {\n      setAlertTitle('Falha ao criar nova categoria');\n      setAlertMessege('Não deixe campos em branco.');\n      setAlertDisplay(true);\n    }\n  } // Render\n\n\n  if (props.display === true) {\n    return React.createElement(\"div\", {\n      className: \"galery-addCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Adicinar nova categoria\"), React.createElement(\"button\", {\n      className: \"addCategory-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"addCategory-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Adicione somente as categorias que voc\\xEA ira usar\"), React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: event => setNewCategory(event.target.value),\n      className: \"addCategory-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-salvar\",\n      onClick: handleCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"+\")))), React.createElement(Alert, {\n      display: alertDisplay,\n      title: alertTitle,\n      messege: alertMessege,\n      onclose: event => setAlertDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n}\n;","map":{"version":3,"sources":["C:\\Users\\Zero2\\Desktop\\projeto\\frontend\\src\\pages\\Galeria\\addCategory\\index.js"],"names":["React","useState","Alert","AddCategory","props","newCategory","setNewCategory","alertDisplay","setAlertDisplay","alertMessege","setAlertMessege","alertTitle","setAlertTitle","handleCategory","e","preventDefault","display","onClose","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA,oBAEAH,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAE/BI,WAF+B;AAAA,QAElBC,cAFkB;;AAAA,qBAIEL,QAAQ,CAAC,KAAD,CAJV;AAAA;AAAA,QAI/BM,YAJ+B;AAAA,QAIjBC,eAJiB;;AAAA,qBAKEP,QAAQ,CAAC,EAAD,CALV;AAAA;AAAA,QAK/BQ,YAL+B;AAAA,QAKjBC,eALiB;;AAAA,qBAMFT,QAAQ,CAAC,EAAD,CANN;AAAA;AAAA,QAM/BU,UAN+B;AAAA,QAMnBC,aANmB;;AAQtC,iBAAeC,cAAf,CAA8BC,CAA9B,EAAgC;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,CAACV,WAAD,IAAgB,OAAOA,WAAP,KAAwB,WAAxC,IAAuDA,WAAW,KAAK,IAAvE,IAA+EA,WAAW,KAAK,EAAlG,EAAqG;AACjGO,MAAAA,aAAa,CAAC,+BAAD,CAAb;AACAF,MAAAA,eAAe,CAAE,6BAAF,CAAf;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ,GAhBqC,CAkBtC;;;AACA,MAAGJ,KAAK,CAACY,OAAN,KAAkB,IAArB,EAA0B;AACtB,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAEZ,KAAK,CAACa,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,EAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,WAA/B;AAA2C,MAAA,QAAQ,EAAEC,KAAK,IAAIZ,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA5E;AAAkG,MAAA,SAAS,EAAC,mBAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEP,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAFJ,CALJ,CADJ,EAcI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEN,YAAhB;AAA8B,MAAA,KAAK,EAAEI,UAArC;AAAiD,MAAA,OAAO,EAAEF,YAA1D;AAAwE,MAAA,OAAO,EAAES,KAAK,IAAIV,eAAe,CAAC,KAAD,CAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ;AAkBH,GAnBD,MAmBK;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ;AAAA","sourcesContent":["import React, {useState} from 'react';\r\nimport Alert from '../../../componentes/Alert';\r\nimport './style.css';\r\n\r\nexport default function AddCategory(props){\r\n\r\n    const [newCategory, setNewCategory] = useState('');\r\n\r\n    const [alertDisplay, setAlertDisplay] = useState(false);\r\n    const [alertMessege, setAlertMessege] = useState('');\r\n    const [alertTitle, setAlertTitle] = useState('');\r\n\r\n    async function handleCategory(e){\r\n        e.preventDefault();\r\n\r\n        if(!newCategory || typeof(newCategory) === 'undefined' || newCategory === null || newCategory === ''){\r\n            setAlertTitle('Falha ao criar nova categoria');\r\n            setAlertMessege( 'Não deixe campos em branco.');\r\n            setAlertDisplay(true);\r\n        }\r\n    }\r\n\r\n    // Render\r\n    if(props.display === true){    \r\n        return(\r\n            <div className=\"galery-addCategory\">\r\n                <div className=\"addCategory-content\">\r\n                    <div className=\"addCategory-header\">\r\n                        <h1>Adicinar nova categoria</h1>\r\n                        <button className=\"addCategory-close\" onClick={props.onClose}>X</button>\r\n                    </div>\r\n                    <div className=\"addCategory-body\">\r\n                        <span>Adicione somente as categorias que você ira usar</span>\r\n                        <div className=\"from-group\">\r\n                            <input type=\"text\" placeholder=\"Categoria\" onChange={event => setNewCategory(event.target.value)} className=\"addCategory-input\"/>\r\n                            <button className=\"btn-salvar\" onClick={handleCategory}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Alert display={alertDisplay} title={alertTitle} messege={alertMessege} onclose={event => setAlertDisplay(false)}/>\r\n            </div>\r\n        )\r\n    }else{\r\n        return <div />\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}