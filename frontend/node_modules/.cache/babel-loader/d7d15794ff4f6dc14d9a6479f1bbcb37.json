{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Login/index.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Alert from \"../../componentes/Alert\";\nimport ValidaForms from \"../../componentes/ValidaForms\";\nimport \"./style.css\";\nimport loadingSvg from \"../../assets/loading.svg\";\nimport woman from \"../../assets/woman.jpg\";\nexport default function Login({\n  history\n}) {\n  // Form\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginON = _useState6[0],\n        setLoginOn = _useState6[1]; // Alert\n\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertContent = _useState8[0],\n        setAlertContent = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertDisplay = _useState10[0],\n        setAlertDisplay = _useState10[1]; // Loading\n\n\n  const _useState11 = useState('Login'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  async function handlerLogin(e) {\n    e.preventDefault();\n    setLoading('loading');\n    const validaForm = await ValidaForms([{\n      $campo: email,\n      $nomeCampo: 'email',\n      $rules: {\n        min: 4,\n        max: 32,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: password,\n      $nomeCampo: 'password',\n      $rules: {\n        min: 4,\n        max: 12,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: loginON,\n      $nomeCampo: 'Lembrar-me',\n      $rules: {\n        type: Boolean,\n        required: false\n      }\n    }]);\n\n    if (validaForm !== false) {\n      setAlertContent({\n        title: \"Falha ao logar\",\n        message: validaForm[0],\n        type: 'fail'\n      });\n      setAlertDisplay(true);\n      setLoading('login');\n    } else {\n      try {\n        const autheticate = await axios.post(\"http://localhost:3001/api/authenticate\", {\n          email,\n          password\n        });\n        localStorage.setItem('user_id', autheticate.data._id);\n        setLoading('login');\n        history.push('/galeria');\n      } catch (err) {\n        const erro = {\n          error: err\n        };\n\n        if (erro.error.response) {\n          const message = erro.error.response.data.message;\n          setAlertContent({\n            title: \"Falha ao logar\",\n            message: message,\n            type: 'fail'\n          });\n          setAlertDisplay(true);\n          setLoading('login');\n        } else {// Falha no servidor\n        }\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-login\",\n    onSubmit: handlerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-woman\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: woman,\n    alt: \"Mulher de azul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Ola,\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Bem vindo!\")), React.createElement(\"span\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Fa\\xE7a upload das suas imagens, com qualidade e tenha acesso aonde estiver pelo computador ou celular.\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"f-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Seu email\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"f-input\",\n    placeholder: \"E-mail\",\n    onChange: event => setEmail(event.target.value),\n    maxLength: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"f-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Sua senha\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    className: \"f-input\",\n    placeholder: \"Digite uma senha segura\",\n    onChange: event => setPassword(event.target.value),\n    maxLength: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"lebrar-me\",\n    onChange: event => setLoginOn(event.target.checked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"lebrar-me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Manter conectado\")), React.createElement(\"button\", {\n    className: \"btn-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, loading === 'loading' ? React.createElement(\"img\", {\n    src: loadingSvg,\n    className: \"loading\",\n    alt: \"Loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }) : loading), React.createElement(\"span\", {\n    className: \"no-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"N\\xE3o tem uma conta? \", React.createElement(\"a\", {\n    href: \"/#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Crie uma agora\")), React.createElement(Alert, {\n    display: alertDisplay,\n    content: alertContent,\n    onClose: e => {\n      setAlertDisplay(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Login/index.js"],"names":["React","useState","axios","Alert","ValidaForms","woman","Login","history","email","setEmail","password","setPassword","loginON","setLoginOn","alertContent","setAlertContent","alertDisplay","setAlertDisplay","loading","setLoading","handlerLogin","e","preventDefault","validaForm","$campo","$nomeCampo","$rules","min","max","type","String","required","Boolean","title","message","autheticate","post","localStorage","setItem","data","_id","push","err","erro","error","response","event","target","value","checked","loadingSvg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Alert from \"../../componentes/Alert\";\nimport ValidaForms from \"../../componentes/ValidaForms\";\n\nimport \"./style.css\";\nimport loadingSvg from \"../../assets/loading.svg\";\nimport woman from \"../../assets/woman.jpg\";\n\n\nexport default function Login({ history }) {\n\n    // Form\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginON, setLoginOn] = useState([])\n\n\n    // Alert\n    const [alertContent, setAlertContent] = useState({})\n    const [alertDisplay, setAlertDisplay] = useState(false);\n\n    // Loading\n    const [loading, setLoading] = useState('Login')\n\n\n    async function handlerLogin(e) {\n        e.preventDefault();\n        setLoading('loading');\n\n        const validaForm = await ValidaForms([\n            {\n                $campo: email, $nomeCampo: 'email', $rules: {\n                    min: 4,\n                    max: 32,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: password, $nomeCampo: 'password', $rules: {\n                    min: 4,\n                    max: 12,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: loginON, $nomeCampo: 'Lembrar-me', $rules: {\n                    type: Boolean,\n                    required: false\n                }\n            },\n\n        ])\n\n        if (validaForm !== false) {\n\n            setAlertContent({\n                title: \"Falha ao logar\",\n                message: validaForm[0],\n                type: 'fail'\n            })\n            setAlertDisplay(true);\n            setLoading('login');\n        } else {\n\n            try {\n                const autheticate = await axios.post(`http://localhost:3001/api/authenticate`, { email, password });\n                localStorage.setItem('user_id', autheticate.data._id);\n                setLoading('login');\n                history.push('/galeria')\n\n\n            } catch (err) {\n\n                const erro = { error: err };\n\n                if (erro.error.response) {\n\n                    const message = erro.error.response.data.message\n\n\n                    setAlertContent({\n                        title: \"Falha ao logar\",\n                        message: message,\n                        type: 'fail'\n                    })\n                    setAlertDisplay(true);\n                    setLoading('login');\n                } else {\n                    // Falha no servidor\n                }\n\n\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"container-main\">\n            <form className=\"form-login\" onSubmit={handlerLogin}>\n                <div className=\"container-woman\">\n                    <img src={woman} alt=\"Mulher de azul\" />\n                </div>\n                <div className=\"content\">\n                    <h1 className=\"title\">\n                        Ola,\n                   <span>Bem vindo!</span>\n                    </h1>\n                    <span className=\"description\">\n                        Faça upload das suas imagens, com qualidade e tenha acesso aonde estiver pelo computador ou celular.\n                </span>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" className=\"f-label\">Seu email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            className=\"f-input\"\n                            placeholder=\"E-mail\"\n                            onChange={event => setEmail(event.target.value)}\n                            maxLength=\"30\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"f-label\">Sua senha</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            className=\"f-input\"\n                            placeholder=\"Digite uma senha segura\"\n                            onChange={event => setPassword(event.target.value)}\n                            maxLength=\"10\"\n                        />\n                    </div>\n                    <div className=\"form-row\">\n                        <input type=\"checkbox\" id=\"lebrar-me\" onChange={event => setLoginOn(event.target.checked)} />\n                        <label htmlFor=\"lebrar-me\">Manter conectado</label>\n                    </div>\n\n                    <button className=\"btn-login\">{loading === 'loading' ? (<img src={loadingSvg} className=\"loading\" alt=\"Loading\" />) : loading}</button>\n\n\n                    <span className=\"no-count\">Não tem uma conta? <a href=\"/#\">Crie uma agora</a></span>\n                    <Alert\n                        \n                        display={alertDisplay}\n                        content={alertContent}\n                        onClose={(e) => { setAlertDisplay(false) }} />\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}