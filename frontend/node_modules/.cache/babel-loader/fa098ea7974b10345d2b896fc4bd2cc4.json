{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport \"./style.css\";\nimport camera from \"../../assets/camera.svg\";\nconst user_id = localStorage.getItem('user_id');\nexport default function Galeria() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        uploadDisplay = _useState2[0],\n        setUploadDisplay = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categoryDisplay = _useState4[0],\n        setCategoryDisplay = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        listCategory = _useState6[0],\n        setListCategory = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        images = _useState8[0],\n        setImages = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isLoading = _useState10[0],\n        setIsLoading = _useState10[1];\n\n  useMemo(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/image/\".concat(user_id));\n      console.log(response);\n      setImages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n\n      if (response.data.category === null) {\n        setListCategory(['none']);\n      } else {\n        setListCategory(response.data.category);\n      }\n    } catch (error) {\n      // Tratar erro\n      console.log({\n        error\n      });\n    }\n\n    setIsLoading(false);\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Galeria\")), React.createElement(\"div\", {\n    className: \"header-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-upload\",\n    onClick: event => setUploadDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Adicionar imagem \", React.createElement(\"img\", {\n    src: camera,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"header-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"btn-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Categorias\"), listCategory ? listCategory.map((item, i) => React.createElement(\"option\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, item)) : '')), React.createElement(\"div\", {\n    className: \"header-add-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-add-category\",\n    onClick: event => setCategoryDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"main\", {\n    className: \"main-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, !isLoading ? images ? images.map((item, i) => React.createElement(\"li\", {\n    className: \"card-image\",\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.link,\n    alt: \"\",\n    className: \"card-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))) : 'Sem imagens no momento!' : ''))), React.createElement(AddCategory, {\n    display: categoryDisplay,\n    onClose: event => setCategoryDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Upload, {\n    display: uploadDisplay,\n    onClose: event => setUploadDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js"],"names":["React","useState","useMemo","axios","Header","Footer","Upload","AddCategory","user_id","localStorage","getItem","Galeria","uploadDisplay","setUploadDisplay","categoryDisplay","setCategoryDisplay","listCategory","setListCategory","images","setImages","isLoading","setIsLoading","response","get","console","log","data","error","category","event","camera","map","item","i","_id","link"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport \"./style.css\";\n\nimport camera from \"../../assets/camera.svg\";\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function Galeria() {\n\n    const [uploadDisplay, setUploadDisplay] = useState(false);\n    const [categoryDisplay, setCategoryDisplay] = useState(false);\n\n    const [listCategory, setListCategory] = useState([])\n\n    const [images, setImages] = useState([]);\n    const [isLoading, setIsLoading] = useState(true)\n\n\n\n    useMemo(async () => {\n\n        try {\n            const response = await axios.get(`http://localhost:3001/api/image/${user_id}`);\n            console.log(response)\n\n            setImages(response.data);\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n            if (response.data.category === null) {\n                setListCategory(['none']);\n            } else {\n                setListCategory(response.data.category);\n            }\n\n        } catch (error) {\n            // Tratar erro\n            console.log({ error })\n        }\n        setIsLoading(false)\n    })\n\n\n\n\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-galeria\">\n                <header className=\"header-galeria\">\n                    <div className=\"header-title\">\n                        <h1 className=\"title\">Galeria</h1>\n                    </div>\n\n                    <div className=\"header-upload\">\n                        <button className=\"btn-upload\" onClick={event => setUploadDisplay(true)}> Adicionar imagem <img src={camera} alt=\"\" /></button>\n                    </div>\n\n                    <div className=\"header-category\">\n                        <select className=\"btn-category\">\n                            <option value=\"\">Categorias</option>\n                            {listCategory ? listCategory.map((item, i) => (\n                                <option key={i}>{item}</option>\n                            )) : ''}\n                        </select>\n                    </div>\n\n                    <div className=\"header-add-category\">\n                        <button className=\"btn-add-category\" onClick={event => setCategoryDisplay(true)}>\n                            +\n                        </button>\n                    </div>\n\n                </header>\n\n                <main className=\"main-galeria\">\n                    <ul>\n\n                        {!isLoading ? (\n                            images ? images.map((item, i) => (\n\n                                <li className=\"card-image\" key={item._id}>\n                                    <div className=\"card-header\">\n                                        <img src={item.link} alt=\"\" className=\"card-img\" />\n                                    </div>\n                                    <div className=\"card-main\">\n                                        <div className=\"description\"></div>\n                                    </div>\n                                </li>\n                            )) : 'Sem imagens no momento!'\n                        ) : '' }\n                    </ul>\n                </main>\n            </div>\n\n            <AddCategory display={categoryDisplay} onClose={event => setCategoryDisplay(false)} />\n            <Upload display={uploadDisplay} onClose={event => setUploadDisplay(false)} />\n            <Footer />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}