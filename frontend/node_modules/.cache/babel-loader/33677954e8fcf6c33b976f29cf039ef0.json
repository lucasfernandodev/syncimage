{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js\";\nimport React, { useState } from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\nconst user_id = localStorage.getItem('user_id');\nexport default function AddCategory(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCategory = _useState2[0],\n        setNewCategory = _useState2[1]; // Displayer\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertDisplay = _useState4[0],\n        setAlertDisplay = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertMessege = _useState6[0],\n        setAlertMessege = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertTitle = _useState8[0],\n        setAlertTitle = _useState8[1];\n\n  const _useState9 = useState('primary'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertType = _useState10[0],\n        setAlertType = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        alertcontent = _useState12[0],\n        setAlertContent = _useState12[1];\n\n  async function handleCategory(e) {\n    e.preventDefault();\n\n    if (!newCategory || typeof newCategory === 'undefined' || newCategory === null || newCategory === '') {\n      setAlertTitle('Falha ao criar nova categoria');\n      setAlertMessege('Não deixe campos em branco!');\n      setAlertType('fail');\n      setAlertDisplay(true);\n    } else {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id)); // Verifica o array inteiro\n\n        if (response.data.category === null) {\n          if (!(await axios.post(\"http://localhost:3001/api/category\", {\n            user_id,\n            category: [newCategory]\n          }))) {\n            setAlertContent({\n              title: \"Falha ao criar nova categoria\",\n              message: \"Tente novamente!\",\n              type: \"fail\"\n            });\n            setAlertDisplay(true);\n          } else {\n            setAlertContent({\n              title: \"Sucesso ao criar categoria\",\n              message: \"A categoria foi adicionada a sua lista!\",\n              type: \"sucess\"\n            });\n            setAlertDisplay(true);\n          }\n        } else {\n          const categoryData = response.data.category; // Verifica se existe uma categoria igual no db\n\n          const filterArray = categoryData.filter(function (categoryData) {\n            return categoryData === newCategory;\n          }); // Lembras de converter tudo pra minusculo\n\n          if (!filterArray || filterArray.length === 0) {\n            categoryData.push(newCategory);\n\n            if (!(await axios.put(\"http://localhost:3001/api/category/\".concat(user_id), {\n              user_id,\n              category: categoryData\n            }))) {\n              setAlertTitle('Falha ao criar nova categoria');\n              setAlertMessege('Tente novamente!');\n              setAlertType('fail');\n              setAlertDisplay(true);\n            } else {\n              setAlertTitle('Sucesso ao criar categoria');\n              setAlertMessege('A categoria foi adicionada a sua lista!');\n              setAlertType('sucess');\n              setAlertDisplay(true);\n            }\n          } else {\n            setAlertTitle('Falha ao criar nova categoria');\n            setAlertMessege('Categoria digitada já existe!');\n            setAlertDisplay(true);\n            setAlertType('fail');\n            console.log(\"Erro categoria já existe\");\n          }\n        }\n      } catch (error) {\n        // Tratar\n        console.log({\n          error\n        });\n      }\n    }\n  } // Render\n\n\n  if (props.display === true) {\n    return React.createElement(\"div\", {\n      className: \"galery-addCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Adicinar nova categoria\"), React.createElement(\"button\", {\n      className: \"addCategory-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"addCategory-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Adicione somente as categorias que voc\\xEA ira usar\"), React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: event => setNewCategory(event.target.value),\n      className: \"addCategory-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-salvar\",\n      onClick: handleCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"+\")))), React.createElement(Alert, {\n      type: alertType,\n      display: alertDisplay,\n      title: alertTitle,\n      messege: alertMessege,\n      onClose: event => setAlertDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    });\n  }\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js"],"names":["React","useState","Alert","axios","user_id","localStorage","getItem","AddCategory","props","newCategory","setNewCategory","alertDisplay","setAlertDisplay","alertMessege","setAlertMessege","alertTitle","setAlertTitle","alertType","setAlertType","alertcontent","setAlertContent","handleCategory","e","preventDefault","response","get","data","category","post","title","message","type","categoryData","filterArray","filter","length","push","put","console","log","error","display","onClose","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function AddCategory(props){\n\n    const [newCategory, setNewCategory] = useState('');\n\n    // Displayer\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertMessege, setAlertMessege] = useState('');\n    const [alertTitle, setAlertTitle] = useState('');\n    const [alertType, setAlertType] = useState('primary');\n\n    const [alertcontent, setAlertContent] = useState([])\n\n    async function handleCategory(e){\n        e.preventDefault();\n\n        if(!newCategory || typeof(newCategory) === 'undefined' || newCategory === null || newCategory === ''){\n            setAlertTitle('Falha ao criar nova categoria');\n            setAlertMessege( 'Não deixe campos em branco!');\n            setAlertType('fail')\n            setAlertDisplay(true);\n\n        }else{\n\n            try {\n\n                const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n                // Verifica o array inteiro\n                if(response.data.category === null){\n\n                    if(!await axios.post(`http://localhost:3001/api/category`, {user_id, category :[newCategory]})){\n                        \n                        setAlertContent({\n                            title: \"Falha ao criar nova categoria\",\n                            message: \"Tente novamente!\",\n                            type: \"fail\"\n                        })\n                        setAlertDisplay(true);\n                    }else{\n                        setAlertContent({\n                            title: \"Sucesso ao criar categoria\",\n                            message: \"A categoria foi adicionada a sua lista!\",\n                            type: \"sucess\"\n                        })\n                        setAlertDisplay(true);\n                    }\n                }else{\n                    const categoryData = response.data.category;\n\n\n                    // Verifica se existe uma categoria igual no db\n                    const filterArray = categoryData.filter(function(categoryData) {\n                        return categoryData === newCategory\n                    })\n                \n                    // Lembras de converter tudo pra minusculo\n                    if(!filterArray || filterArray.length === 0){\n\n                        categoryData.push(newCategory);\n\n                        if(!await axios.put(`http://localhost:3001/api/category/${user_id}`, {user_id, category : categoryData})){\n                            setAlertTitle('Falha ao criar nova categoria');\n                            setAlertMessege( 'Tente novamente!');\n                            setAlertType('fail')\n                            setAlertDisplay(true);\n                        }else{\n                            setAlertTitle('Sucesso ao criar categoria');\n                            setAlertMessege( 'A categoria foi adicionada a sua lista!');\n                            setAlertType('sucess')\n                            setAlertDisplay(true);\n                        }\n                    }else{\n                        setAlertTitle('Falha ao criar nova categoria');\n                        setAlertMessege( 'Categoria digitada já existe!');\n                        setAlertDisplay(true);\n                        setAlertType('fail')\n                        console.log(\"Erro categoria já existe\");\n                    }\n                }\n\n            } catch (error) {\n                // Tratar\n                console.log({error})\n            }\n\n\n        }\n\n    \n    }\n\n    // Render\n    if(props.display === true){    \n        return(\n            <div className=\"galery-addCategory\">\n                <div className=\"addCategory-content\">\n                    <div className=\"addCategory-header\">\n                        <h1>Adicinar nova categoria</h1>\n                        <button className=\"addCategory-close\" onClick={props.onClose}>X</button>\n                    </div>\n                    <div className=\"addCategory-body\">\n                        <span>Adicione somente as categorias que você ira usar</span>\n                        <div className=\"from-group\">\n                            <input type=\"text\" placeholder=\"Categoria\" onChange={event => setNewCategory(event.target.value)} className=\"addCategory-input\"/>\n                            <button className=\"btn-salvar\" onClick={handleCategory}>+</button>\n                        </div>\n                    </div>\n                </div>\n                <Alert type={alertType} display={alertDisplay} title={alertTitle} messege={alertMessege} onClose={event => setAlertDisplay(false)}/>\n            </div>\n        )\n    }else{\n        return <div />\n    }\n};"]},"metadata":{},"sourceType":"module"}