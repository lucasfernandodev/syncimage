{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport \"./style.css\";\nimport camera from \"../../assets/camera.svg\";\nconst user_id = localStorage.getItem('user_id');\nexport default function Galeria() {\n  // Modais\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        uploadDisplay = _useState2[0],\n        setUploadDisplay = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categoryDisplay = _useState4[0],\n        setCategoryDisplay = _useState4[1]; // Array com categorias das imagens\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        listCategory = _useState6[0],\n        setListCategory = _useState6[1]; // Array com imagens do bd\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        images = _useState8[0],\n        setImages = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loading = _useState10[0],\n        setLoading = _useState10[1];\n\n  const _useState11 = useState(1),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentPage = _useState12[0],\n        setCurrentPage = _useState12[1];\n\n  const _useState13 = useState(8),\n        _useState14 = _slicedToArray(_useState13, 2),\n        imagePorPage = _useState14[0],\n        setImagePorPage = _useState14[1];\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/image/\".concat(user_id));\n        console.log(response);\n        setImages(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n\n        if (response.data.category === null) {\n          setListCategory(['none']);\n        } else {\n          setListCategory(response.data.category);\n        }\n      } catch (error) {\n        // Tratar erro\n        console.log({\n          error\n        });\n      }\n    })();\n  }, [uploadDisplay]);\n  const indexOfLastImage = currentPage * imagePorPage;\n  const indexOfFirstPost = indexOfLastImage - imagePorPage;\n  const currentImages = images.slice(1, indexOfLastImage);\n  document.addEventListener('scroll', function () {\n    console.log(' ');\n\n    if (document.documentElement.scrollTop + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n      if (currentImages < indexOfLastImage) {\n        var pagination = currentPage + 1;\n        setCurrentPage(pagination);\n      }\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Galeria\")), React.createElement(\"div\", {\n    className: \"header-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-upload\",\n    onClick: event => setUploadDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" Adicionar imagem \", React.createElement(\"img\", {\n    src: camera,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"header-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"btn-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Categorias\"), listCategory ? listCategory.map((item, i) => React.createElement(\"option\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, item)) : '')), React.createElement(\"div\", {\n    className: \"header-add-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-add-category\",\n    onClick: event => setCategoryDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"main\", {\n    className: \"main-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"content-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, images ? currentImages.map(item => React.createElement(\"li\", {\n    className: \"card-image\",\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.link,\n    alt: \"\",\n    className: \"card-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))) : 'Sem imagens no momento!'))), React.createElement(AddCategory, {\n    display: categoryDisplay,\n    onClose: event => setCategoryDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Upload, {\n    display: uploadDisplay,\n    onClose: event => setUploadDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js"],"names":["React","useState","useEffect","axios","Header","Footer","Upload","AddCategory","user_id","localStorage","getItem","Galeria","uploadDisplay","setUploadDisplay","categoryDisplay","setCategoryDisplay","listCategory","setListCategory","images","setImages","loading","setLoading","currentPage","setCurrentPage","imagePorPage","setImagePorPage","response","get","console","log","data","error","category","indexOfLastImage","indexOfFirstPost","currentImages","slice","document","addEventListener","documentElement","scrollTop","clientHeight","scrollHeight","pagination","event","camera","map","item","i","_id","link"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;;AAIA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B;AAF8B,oBAGYV,QAAQ,CAAC,KAAD,CAHpB;AAAA;AAAA,QAGvBW,aAHuB;AAAA,QAGRC,gBAHQ;;AAAA,qBAIgBZ,QAAQ,CAAC,KAAD,CAJxB;AAAA;AAAA,QAIvBa,eAJuB;AAAA,QAINC,kBAJM,kBAM9B;;;AAN8B,qBAOUd,QAAQ,CAAC,EAAD,CAPlB;AAAA;AAAA,QAOvBe,YAPuB;AAAA,QAOTC,eAPS,kBAS9B;;;AAT8B,qBAUFhB,QAAQ,CAAC,EAAD,CAVN;AAAA;AAAA,QAUvBiB,MAVuB;AAAA,QAUfC,SAVe;;AAAA,qBAWAlB,QAAQ,CAAC,KAAD,CAXR;AAAA;AAAA,QAWvBmB,OAXuB;AAAA,QAWdC,UAXc;;AAAA,sBAYQpB,QAAQ,CAAC,CAAD,CAZhB;AAAA;AAAA,QAYvBqB,WAZuB;AAAA,QAYVC,cAZU;;AAAA,sBAaUtB,QAAQ,CAAC,CAAD,CAblB;AAAA;AAAA,QAavBuB,YAbuB;AAAA,QAaTC,eAbS;;AAiB9BvB,EAAAA,SAAS,CAAC,MAAM;AACX,uBAAkB;AACf,UAAI;AACA,cAAMwB,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,2CAA6CnB,OAA7C,EAAvB;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAP,QAAAA,SAAS,CAACO,QAAQ,CAACI,IAAV,CAAT;AACH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;;AAED,UAAI;AACA,cAAML,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,8CAAgDnB,OAAhD,EAAvB;;AAEA,YAAIkB,QAAQ,CAACI,IAAT,CAAcE,QAAd,KAA2B,IAA/B,EAAqC;AACjCf,UAAAA,eAAe,CAAC,CAAC,MAAD,CAAD,CAAf;AACH,SAFD,MAEO;AACHA,UAAAA,eAAe,CAACS,QAAQ,CAACI,IAAT,CAAcE,QAAf,CAAf;AACH;AAEJ,OATD,CASE,OAAOD,KAAP,EAAc;AACZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,UAAAA;AAAF,SAAZ;AACH;AACJ,KAvBA,GAAD;AA0BH,GA3BQ,EA2BN,CAACnB,aAAD,CA3BM,CAAT;AA6BA,QAAMqB,gBAAgB,GAAGX,WAAW,GAAGE,YAAvC;AACA,QAAMU,gBAAgB,GAAGD,gBAAgB,GAAGT,YAA5C;AACA,QAAMW,aAAa,GAAGjB,MAAM,CAACkB,KAAP,CAAa,CAAb,EAAgBH,gBAAhB,CAAtB;AAEDI,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,YAAW;AAC9CV,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,QAAIQ,QAAQ,CAACE,eAAT,CAAyBC,SAAzB,GAAqCH,QAAQ,CAACE,eAAT,CAAyBE,YAA9D,IAA8EJ,QAAQ,CAACE,eAAT,CAAyBG,YAA3G,EAAyH;AACvH,UAAGP,aAAa,GAAGF,gBAAnB,EAAoC;AAClC,YAAIU,UAAU,GAAGrB,WAAW,GAAG,CAA/B;AACAC,QAAAA,cAAc,CAACoB,UAAD,CAAd;AACD;AACF;AACF,GARA;AAYC,SACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEC,KAAK,IAAI/B,gBAAgB,CAAC,IAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2F;AAAK,IAAA,GAAG,EAAEgC,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3F,CADJ,CALJ,EASI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK7B,YAAY,GAAGA,YAAY,CAAC8B,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAC7B;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAjB,CADY,CAAH,GAER,EAJT,CADJ,CATJ,EAkBI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,OAAO,EAAEH,KAAK,IAAI7B,kBAAkB,CAAC,IAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAlBJ,CADJ,EA2BI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKG,MAAM,GAAGiB,aAAa,CAACW,GAAd,CAAkBC,IAAI,IAE5B;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,GAAG,EAAEA,IAAI,CAACE,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACG,IAAf;AAAqB,IAAA,GAAG,EAAC,EAAzB;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFM,CAAH,GAKF,yBAPT,CADJ,CA3BJ,CAFJ,EA4CI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEpC,eAAtB;AAAuC,IAAA,OAAO,EAAE8B,KAAK,IAAI7B,kBAAkB,CAAC,KAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CJ,EA6CI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,aAAjB;AAAgC,IAAA,OAAO,EAAEgC,KAAK,IAAI/B,gBAAgB,CAAC,KAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,EA8CI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CJ,CADJ;AAkDH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport \"./style.css\";\n\nimport camera from \"../../assets/camera.svg\";\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function Galeria() {\n\n    // Modais\n    const [uploadDisplay, setUploadDisplay] = useState(false);\n    const [categoryDisplay, setCategoryDisplay] = useState(false);\n\n    // Array com categorias das imagens\n    const [listCategory, setListCategory] = useState([]);\n\n    // Array com imagens do bd\n    const [images, setImages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [imagePorPage, setImagePorPage] = useState(8)\n\n\n\n    useEffect(() => {\n        (async function () {\n            try {\n                const response = await axios.get(`http://localhost:3001/api/image/${user_id}`);\n                console.log(response)\n\n                setImages(response.data);\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n                if (response.data.category === null) {\n                    setListCategory(['none']);\n                } else {\n                    setListCategory(response.data.category);\n                }\n\n            } catch (error) {\n                // Tratar erro\n                console.log({ error })\n            }\n        }());\n\n\n    }, [uploadDisplay])\n\n    const indexOfLastImage = currentPage * imagePorPage;\n    const indexOfFirstPost = indexOfLastImage - imagePorPage;\n    const currentImages = images.slice(1, indexOfLastImage)\n\n   document.addEventListener('scroll', function() {\n    console.log(' ')\n    if (document.documentElement.scrollTop + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n      if(currentImages < indexOfLastImage){\n        var pagination = currentPage + 1;\n        setCurrentPage(pagination)\n      }\n    }\n  });\n\n\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-galeria\">\n                <header className=\"header-galeria\">\n                    <div className=\"header-title\">\n                        <h1 className=\"title\">Galeria</h1>\n                    </div>\n\n                    <div className=\"header-upload\">\n                        <button className=\"btn-upload\" onClick={event => setUploadDisplay(true)}> Adicionar imagem <img src={camera} alt=\"\" /></button>\n                    </div>\n\n                    <div className=\"header-category\">\n                        <select className=\"btn-category\">\n                            <option value=\"\">Categorias</option>\n                            {listCategory ? listCategory.map((item, i) => (\n                                <option key={i}>{item}</option>\n                            )) : ''}\n                        </select>\n                    </div>\n\n                    <div className=\"header-add-category\">\n                        <button className=\"btn-add-category\" onClick={event => setCategoryDisplay(true)}>\n                            +\n                        </button>\n                    </div>\n\n                </header>\n\n                <main className=\"main-galeria\">\n                    <ul className=\"content-galeria\">\n\n                        {images ? currentImages.map(item => (\n\n                            <li className=\"card-image\" key={item._id}>\n                               <img src={item.link} alt=\"\" className=\"card-img\" />\n                            </li>\n                        )) : 'Sem imagens no momento!'}\n\n\n                    </ul>\n                </main>\n            </div>\n\n            <AddCategory display={categoryDisplay} onClose={event => setCategoryDisplay(false)} />\n            <Upload display={uploadDisplay} onClose={event => setUploadDisplay(false)} />\n            <Footer />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}