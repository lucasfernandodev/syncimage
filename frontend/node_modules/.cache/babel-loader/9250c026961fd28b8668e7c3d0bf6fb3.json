{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/images/index.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nconst user_id = localStorage.getItem(\"user_id\");\nexport default function Images(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        listItems = _useState2[0],\n        setListItems = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imagesTrue = _useState4[0],\n        setImagesTrue = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isFetching = _useState6[0],\n        setIsFetching = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentPage = _useState8[0],\n        setCurrentPage = _useState8[1];\n\n  useMemo(() => {\n    (async function () {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/image/\".concat(user_id));\n        console.log(response);\n        setImagesTrue(response.data);\n        const currentImages = imagesTrue.slice(0, 6);\n        setListItems(currentImages);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  function fetchMoreListItems() {\n    const imagesporpage = 6;\n    const maxArray = imagesTrue.len;\n    const indexOfLastImage = currentPage * imagesporpage;\n    const currentImages = imagesTrue.slice(0, indexOfLastImage);\n    setListItems(currentImages);\n    setIsFetching(false);\n  }\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n    setIsFetching(true);\n  }\n\n  console.log(props.dataSrc);\n  return React.createElement(\"ul\", {\n    className: \"content-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, listItems ? listItems.map(item => React.createElement(\"li\", {\n    className: \"card-image\",\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.link,\n    alt: \"\",\n    className: \"card-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))) : '');\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/images/index.js"],"names":["React","useState","useEffect","useMemo","axios","user_id","localStorage","getItem","Images","props","listItems","setListItems","imagesTrue","setImagesTrue","isFetching","setIsFetching","currentPage","setCurrentPage","response","get","console","log","data","currentImages","slice","error","window","addEventListener","handleScroll","removeEventListener","fetchMoreListItems","imagesporpage","maxArray","len","indexOfLastImage","innerHeight","document","documentElement","scrollTop","offsetHeight","dataSrc","map","item","_id","link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst user_id = localStorage.getItem(\"user_id\");\r\n\r\nexport default function Images(props) {\r\n    const [listItems, setListItems] = useState(null);\r\n    const [imagesTrue, setImagesTrue] = useState(null)\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useMemo(() => {\r\n        (async function () {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3001/api/image/${user_id}`);\r\n                console.log(response)\r\n\r\n                setImagesTrue(response.data);\r\n                const currentImages = imagesTrue.slice(0, 6);\r\n                setListItems(currentImages);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        fetchMoreListItems();\r\n      }, [isFetching]);\r\n\r\n      function fetchMoreListItems() {\r\n          const imagesporpage = 6;\r\n          const maxArray = imagesTrue.len\r\n          const indexOfLastImage = currentPage * imagesporpage;\r\n          const currentImages = imagesTrue.slice(0, indexOfLastImage);\r\n\r\n          setListItems(currentImages);\r\n          setIsFetching(false);\r\n      }\r\n\r\n    function handleScroll() {\r\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\r\n        setIsFetching(true);\r\n    }\r\n\r\n\r\n    console.log(props.dataSrc)\r\n    return (\r\n\r\n        <ul className=\"content-galeria\">\r\n            {listItems ? listItems.map(item => (\r\n\r\n                <li className=\"card-image\" key={item._id}>\r\n                    <img src={item.link} alt=\"\" className=\"card-img\" />\r\n                </li>\r\n            )) : ''}\r\n        </ul>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}