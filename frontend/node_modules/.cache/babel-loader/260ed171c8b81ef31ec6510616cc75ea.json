{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport Images from './images';\nimport \"./style.css\";\nimport camera from \"../../assets/camera.svg\";\nconst user_id = localStorage.getItem('user_id');\nexport default function Galeria() {\n  // Modais\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        uploadDisplay = _useState2[0],\n        setUploadDisplay = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categoryDisplay = _useState4[0],\n        setCategoryDisplay = _useState4[1]; // Array com categorias das imagens\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        listCategory = _useState6[0],\n        setListCategory = _useState6[1];\n\n  const _useState7 = useState('all'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        categorySelect = _useState8[0],\n        setCategorySelect = _useState8[1]; // Array com imagens do bd\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        images = _useState10[0],\n        setImages = _useState10[1];\n\n  const _useState11 = useState(1),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentPage = _useState12[0],\n        setCurrentPage = _useState12[1];\n\n  const _useState13 = useState(6),\n        _useState14 = _slicedToArray(_useState13, 2),\n        imagePorPage = _useState14[0],\n        setImagePorPage = _useState14[1];\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/image/\".concat(user_id));\n        console.log(response);\n        setImages(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n\n        if (response.data.category === null) {\n          setListCategory(['none']);\n        } else {\n          setListCategory(response.data.category);\n        }\n      } catch (error) {\n        // Tratar erro\n        console.log({\n          error\n        });\n      }\n    })();\n  }, [uploadDisplay]); // const indexOfLastImage = currentPage * imagePorPage;\n  // const indexOfFirsImage = indexOfLastImage - imagePorPage;\n  // const currentImages = images.slice(0, indexOfLastImage);\n  // const qtd = currentImages.length;\n  // document.addEventListener('scroll', function () {\n  //     if (document.documentElement.scrollTop + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n  //         if (currentPage <= 3) {\n  //             var i = currentPage + 1;\n  //             setCurrentPage(i)\n  //             console.log(`o pageTotal é ${qtd} e o currentImage é ${qtd} e o currentpage e ${currentPage}`)\n  //         }\n  //     }\n  // })\n  // if (categorySelect !== 'all') {\n  //     currentImages = currentImages.filter(function (obj) {\n  //          return obj.category === categorySelect; \n  //     });\n  // }\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Galeria\")), React.createElement(\"div\", {\n    className: \"header-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-upload\",\n    onClick: event => setUploadDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \" Adicionar imagem \", React.createElement(\"img\", {\n    src: camera,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"header-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"btn-category\",\n    onChange: event => setCategorySelect(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"All\"), listCategory ? listCategory.map((item, i) => React.createElement(\"option\", {\n    value: item,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, item)) : '')), React.createElement(\"div\", {\n    className: \"header-add-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-add-category\",\n    onClick: event => setCategoryDisplay(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"main\", {\n    className: \"main-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Images, {\n    data: images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(AddCategory, {\n    display: categoryDisplay,\n    onClose: event => setCategoryDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(Upload, {\n    display: uploadDisplay,\n    onClose: event => setUploadDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/index.js"],"names":["React","useState","useEffect","axios","Header","Footer","Upload","AddCategory","Images","user_id","localStorage","getItem","Galeria","uploadDisplay","setUploadDisplay","categoryDisplay","setCategoryDisplay","listCategory","setListCategory","categorySelect","setCategorySelect","images","setImages","currentPage","setCurrentPage","imagePorPage","setImagePorPage","response","get","console","log","data","error","category","event","camera","target","value","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from \"../../componentes/header\";\nimport Footer from \"../../componentes/footer\";\nimport Upload from '../../componentes/Upload';\nimport AddCategory from \"./addCategory\";\nimport Images from './images';\nimport \"./style.css\";\n\nimport camera from \"../../assets/camera.svg\";\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function Galeria() {\n\n    // Modais\n    const [uploadDisplay, setUploadDisplay] = useState(false);\n    const [categoryDisplay, setCategoryDisplay] = useState(false);\n\n    // Array com categorias das imagens\n    const [listCategory, setListCategory] = useState([]);\n    const [categorySelect, setCategorySelect] = useState('all')\n\n    // Array com imagens do bd\n    const [images, setImages] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [imagePorPage, setImagePorPage] = useState(6)\n\n\n\n    useEffect(() => {\n        (async function () {\n            try {\n                const response = await axios.get(`http://localhost:3001/api/image/${user_id}`);\n                console.log(response)\n\n                setImages(response.data);\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n                if (response.data.category === null) {\n                    setListCategory(['none']);\n                } else {\n                    setListCategory(response.data.category);\n                }\n\n            } catch (error) {\n                // Tratar erro\n                console.log({ error })\n            }\n        }());\n\n\n    }, [uploadDisplay])\n\n\n\n    // const indexOfLastImage = currentPage * imagePorPage;\n    // const indexOfFirsImage = indexOfLastImage - imagePorPage;\n    // const currentImages = images.slice(0, indexOfLastImage);\n    // const qtd = currentImages.length;\n\n    // document.addEventListener('scroll', function () {\n\n    //     if (document.documentElement.scrollTop + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n    //         if (currentPage <= 3) {\n    //             var i = currentPage + 1;\n    //             setCurrentPage(i)\n\n    //             console.log(`o pageTotal é ${qtd} e o currentImage é ${qtd} e o currentpage e ${currentPage}`)\n    //         }\n\n    //     }\n\n    // })\n\n\n\n\n\n\n\n\n\n    // if (categorySelect !== 'all') {\n    //     currentImages = currentImages.filter(function (obj) {\n    //          return obj.category === categorySelect; \n    //     });\n    // }\n\n\n\n\n\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-galeria\">\n                <header className=\"header-galeria\">\n                    <div className=\"header-title\">\n                        <h1 className=\"title\">Galeria</h1>\n                    </div>\n\n                    <div className=\"header-upload\">\n                        <button className=\"btn-upload\" onClick={event => setUploadDisplay(true)}> Adicionar imagem <img src={camera} alt=\"\" /></button>\n                    </div>\n\n                    <div className=\"header-category\">\n                        <select className=\"btn-category\"\n                            onChange={event => setCategorySelect(event.target.value)}>\n                            <option value=\"all\">All</option>\n\n                            {listCategory ? listCategory.map((item, i) => (\n                                <option value={item} key={i}>{item}</option>\n                            )) : ''}\n                        </select>\n                    </div>\n\n                    <div className=\"header-add-category\">\n                        <button className=\"btn-add-category\" onClick={event => setCategoryDisplay(true)}>\n                            +\n                        </button>\n                    </div>\n\n                </header>\n\n                <main className=\"main-galeria\">\n                  \n\n  \n                        <Images data={images}/>\n                        {/* {images ? currentImages.map(item => (\n\n                            <li className=\"card-image\" key={item._id}>\n                                <img src={item.link} alt=\"\" className=\"card-img\" />\n                            </li>\n                        )) : 'Sem imagens no momento!'} */}\n\n     \n                </main>\n            </div>\n\n            <AddCategory display={categoryDisplay} onClose={event => setCategoryDisplay(false)} />\n            <Upload display={uploadDisplay} onClose={event => setUploadDisplay(false)} />\n            <Footer />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}