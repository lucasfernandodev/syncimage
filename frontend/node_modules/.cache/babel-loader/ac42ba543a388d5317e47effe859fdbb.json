{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Editar/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CompressImage from \"../../componentes/compress\";\nimport apiDB from \"../../serves/api\";\nimport \"./style.css\";\n\nfunction mbConverter(x) {\n  return x * 1024;\n}\n\nfunction bytesToSize(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport default function Editar(props) {\n  const State = props.history.location.state;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        imageData = _useState2[0],\n        setImageData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageReduce = _useState4[0],\n        setImageReduce = _useState4[1];\n\n  const _useState5 = useState('42'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        qld = _useState6[0],\n        setQld = _useState6[1];\n\n  useEffect(() => {\n    var q = qld * 2 / 100;\n\n    if (!imageData) {\n      if (State) {\n        setImageData(State.data);\n      }\n    } else {\n      const compressImage = CompressImage(Image, q).then(function (response) {\n        const prefix = response.prefix;\n        const data = response.data;\n        setImageData(\"\".concat(prefix).concat(data));\n        setImageReduce(response.endSizeInMb);\n      });\n    }\n  }, [qld]);\n\n  async function handleImage(e) {\n    e.preventDefault();\n    const response = await imgur.post(imageData);\n\n    if (response.status === 200) {\n      const dataImgur = response.data.data;\n      const imageStore = {\n        \"user_name\": localStorage.getItem('username'),\n        \"image_id\": dataImgur.id,\n        \"title\": dataImgur.title,\n        \"description\": dataImgur.description,\n        \"link\": dataImgur.link,\n        \"type\": dataImgur.type,\n        \"size\": dataImgur.size,\n        \"deletehash\": dataImgur.deletehash\n      };\n      const upload = await apiDB.Create(imageStore, 'asynimageupload');\n      console.log(upload);\n    }\n  }\n\n  if (!State) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container-editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-preview\",\n      style: imageData ? {\n        backgroundImage: \"url(\".concat(imageData, \")\")\n      } : {\n        backgroundImage: \"url(\".concat(URL.createObjectURL(State.data), \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \"), React.createElement(\"form\", {\n      className: \"container-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Qualidade\"), React.createElement(\"div\", {\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"50\",\n      defaultValue: \"42\",\n      onChange: event => setQld(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container-qld\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, qld * 2, \"%\"), React.createElement(\"div\", {\n      className: \"container-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"initialSize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Tamanho inicial: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, bytesToSize(Image.size)), \" \"), React.createElement(\"span\", {\n      className: \"reduzeSize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Tamanho final: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", bytesToSize(mbConverter(imageReduce)).replace('Bytes', 'KB')))), React.createElement(\"div\", {\n      className: \"button-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Descartar\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Salvar\"))));\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Editar/index.js"],"names":["React","useState","useEffect","Redirect","CompressImage","apiDB","mbConverter","x","bytesToSize","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","Editar","props","State","history","location","state","imageData","setImageData","imageReduce","setImageReduce","qld","setQld","q","data","compressImage","Image","then","response","prefix","endSizeInMb","handleImage","e","preventDefault","imgur","post","status","dataImgur","imageStore","localStorage","getItem","id","title","description","link","type","size","deletehash","upload","Create","console","backgroundImage","URL","createObjectURL","event","target","value","replace"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAO,aAAP;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAuB;AAEnB,SAAOA,CAAC,GAAG,IAAX;AAEC;;AACD,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAAQ,GAAG,CAAvC,EAA0C;AACtC,MAAID,KAAK,KAAK,CAAd,EAAiB,OAAO,SAAP;AAEjB,QAAME,CAAC,GAAG,IAAV;AACA,QAAMC,EAAE,GAAGF,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBA,QAA9B;AACA,QAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AAEA,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASR,KAAT,IAAkBM,IAAI,CAACE,GAAL,CAASN,CAAT,CAA7B,CAAV;AAEA,SAAOO,UAAU,CAAC,CAACT,KAAK,GAAGM,IAAI,CAACI,GAAL,CAASR,CAAT,EAAYG,CAAZ,CAAT,EAAyBM,OAAzB,CAAiCR,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAACC,CAAD,CAArE;AACH;;AAEL,eAAe,SAASO,MAAT,CAAgBC,KAAhB,EAAuB;AAGlC,QAAMC,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuBC,KAArC;;AAHkC,oBAIAzB,QAAQ,CAAC,IAAD,CAJR;AAAA;AAAA,QAI3B0B,SAJ2B;AAAA,QAIhBC,YAJgB;;AAAA,qBAKI3B,QAAQ,CAAC,CAAD,CALZ;AAAA;AAAA,QAK3B4B,WAL2B;AAAA,QAKdC,cALc;;AAAA,qBAMZ7B,QAAQ,CAAC,IAAD,CANI;AAAA;AAAA,QAM3B8B,GAN2B;AAAA,QAMtBC,MANsB;;AASlC9B,EAAAA,SAAS,CAAC,MAAM;AAIZ,QAAI+B,CAAC,GAAIF,GAAG,GAAG,CAAP,GAAY,GAApB;;AAEA,QAAI,CAACJ,SAAL,EAAgB;AACZ,UAAGJ,KAAH,EAAS;AACLK,QAAAA,YAAY,CAACL,KAAK,CAACW,IAAP,CAAZ;AACH;AAEJ,KALD,MAKO;AAEH,YAAMC,aAAa,GAAG/B,aAAa,CAACgC,KAAD,EAAQH,CAAR,CAAb,CAAwBI,IAAxB,CAA6B,UAAUC,QAAV,EAAoB;AAEvE,cAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;AACA,cAAML,IAAI,GAAGI,QAAQ,CAACJ,IAAtB;AACAN,QAAAA,YAAY,WAAIW,MAAJ,SAAaL,IAAb,EAAZ;AACAJ,QAAAA,cAAc,CAACQ,QAAQ,CAACE,WAAV,CAAd;AAGC,OARqB,CAAtB;AASH;AAIJ,GA1BQ,EA0BN,CAACT,GAAD,CA1BM,CAAT;;AA8BA,iBAAeU,WAAf,CAA2BC,CAA3B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAML,QAAQ,GAAG,MAAMM,KAAK,CAACC,IAAN,CAAWlB,SAAX,CAAvB;;AAEA,QAAGW,QAAQ,CAACQ,MAAT,KAAoB,GAAvB,EAA2B;AACvB,YAAMC,SAAS,GAAGT,QAAQ,CAACJ,IAAT,CAAcA,IAAhC;AACA,YAAMc,UAAU,GAAG;AACf,qBAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB,CADE;AAEf,oBAAaH,SAAS,CAACI,EAFR;AAGf,iBAASJ,SAAS,CAACK,KAHJ;AAIf,uBAAgBL,SAAS,CAACM,WAJX;AAKf,gBAAQN,SAAS,CAACO,IALH;AAMf,gBAAQP,SAAS,CAACQ,IANH;AAOf,gBAAQR,SAAS,CAACS,IAPH;AAQf,sBAAcT,SAAS,CAACU;AART,OAAnB;AAYA,YAAMC,MAAM,GAAG,MAAMrD,KAAK,CAACsD,MAAN,CAAaX,UAAb,EAAyB,iBAAzB,CAArB;AACAY,MAAAA,OAAO,CAAC3C,GAAR,CAAYyC,MAAZ;AACH;AACJ;;AACD,MAAI,CAACnC,KAAL,EAAY;AACR,WAAQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAFD,MAEK;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAEI,SAAS,GAAG;AAAEkC,QAAAA,eAAe,gBAASlC,SAAT;AAAjB,OAAH,GAA8C;AAAEkC,QAAAA,eAAe,gBAASC,GAAG,CAACC,eAAJ,CAAoBxC,KAAK,CAACW,IAA1B,CAAT;AAAjB,OAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,GAAxB;AAA4B,MAAA,GAAG,EAAC,IAAhC;AAAqC,MAAA,YAAY,EAAC,IAAlD;AACI,MAAA,QAAQ,EAAE8B,KAAK,IAAIhC,MAAM,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAMI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCnC,GAAG,GAAC,CAApC,MANJ,EAOI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOvB,WAAW,CAAC4B,KAAK,CAACoB,IAAP,CAAlB,CAA/C,MADJ,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQhD,WAAW,CAACF,WAAW,CAACuB,WAAD,CAAZ,CAAX,CAAsCsC,OAAtC,CAA8C,OAA9C,EAAsD,IAAtD,CAAR,CAA5C,CAFJ,CAPJ,EAWI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE1B,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAXJ,CAFJ,CAFJ;AAsBC;AAIJ","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CompressImage from \"../../componentes/compress\";\nimport apiDB from \"../../serves/api\";\nimport \"./style.css\"\n\nfunction mbConverter(x){\n\n    return x * 1024\n \n    }\n    function bytesToSize(bytes, decimals = 2) {\n        if (bytes === 0) return '0 Bytes';\n    \n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    \n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\nexport default function Editar(props) {\n\n\n    const State = props.history.location.state;\n    const [imageData, setImageData] = useState(null)\n    const [imageReduce, setImageReduce] = useState(0);\n    const [qld, setQld] = useState('42')\n\n\n    useEffect(() => {\n\n\n\n        var q = (qld * 2) / 100;\n\n        if (!imageData) {\n            if(State){\n                setImageData(State.data)\n            }\n\n        } else {\n\n            const compressImage = CompressImage(Image, q).then(function (response) {\n  \n            const prefix = response.prefix;\n            const data = response.data;\n            setImageData(`${prefix}${data}`);\n            setImageReduce(response.endSizeInMb)\n\n            \n            })\n        }\n\n\n\n    }, [qld])\n\n\n \n    async function handleImage(e) {\n        e.preventDefault();\n\n        const response = await imgur.post(imageData);\n\n        if(response.status === 200){\n            const dataImgur = response.data.data\n            const imageStore = {\n                \"user_name\": localStorage.getItem('username'),\n                \"image_id\" : dataImgur.id,\n                \"title\": dataImgur.title,\n                \"description\":  dataImgur.description,\n                \"link\": dataImgur.link,\n                \"type\": dataImgur.type,\n                \"size\": dataImgur.size,\n                \"deletehash\": dataImgur.deletehash,\n\n            }\n\n            const upload = await apiDB.Create(imageStore, 'asynimageupload');\n            console.log(upload);\n        }\n    }\n    if (!State) {\n        return (<Redirect to=\"/\" />);\n    }else{\n        \n    return (\n\n        <div className=\"container-editor\">\n            <div className=\"container-preview\" style={imageData ? { backgroundImage: `url(${imageData})` } : { backgroundImage: `url(${URL.createObjectURL(State.data)})` }}> </div>\n            <form className=\"container-option\">\n                <h1 className=\"title\">Qualidade</h1>\n                <div className=\"form-input\">\n                    <input type=\"range\" min=\"0\" max=\"50\" defaultValue=\"42\"\n                        onChange={event => setQld(event.target.value)} />\n                </div>\n                <div className=\"container-qld\">{qld*2}%</div>\n                <div className=\"container-info\">\n                    <span className=\"initialSize\">Tamanho inicial: <span>{bytesToSize(Image.size)}</span> </span>\n                    <span className=\"reduzeSize\">Tamanho final: <span> {bytesToSize(mbConverter(imageReduce)).replace('Bytes','KB')}</span></span>\n                </div>\n                <div className=\"button-group\">\n                    <button className=\"btn btn-danger\">Descartar</button>\n                    <button className=\"btn btn-primary\" onClick={handleImage}>Salvar</button>\n                </div>\n            </form>\n        </div>\n    )\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}