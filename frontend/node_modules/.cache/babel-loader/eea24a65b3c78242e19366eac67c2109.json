{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/Config/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport axios from 'axios';\nimport ValidaForms from \"../../../componentes/ValidaForms\";\nimport Alert from \"../../../componentes/Alert\";\nimport CompressImage from \"../../../componentes/compress\";\nconst user_id = localStorage.getItem(\"user_id\");\nexport default function Config(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categoria = _useState4[0],\n        setCategoria = _useState4[1];\n\n  const _useState5 = useState('publico'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        privacy = _useState6[0],\n        setPrivacy = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        descriptionNone = _useState10[0],\n        setDescriptionNone = _useState10[1];\n\n  const _useState11 = useState('Desativado'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        editionON = _useState12[0],\n        setEditionOn = _useState12[1]; // Categorias\n\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        listCategory = _useState14[0],\n        setListCategory = _useState14[1]; // alert\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        alertDisplay = _useState16[0],\n        setAlertDisplay = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        alertcontent = _useState18[0],\n        setAlertContent = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertContext = _useState20[0],\n        setAlertContext = _useState20[1];\n\n  const _useState21 = useState('primary'),\n        _useState22 = _slicedToArray(_useState21, 2),\n        alertType = _useState22[0],\n        setAlertType = _useState22[1];\n\n  useMemo(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n\n      if (response.data.category === null) {\n        setListCategory(['none']);\n      } else {\n        setListCategory(response.data.category);\n      }\n    } catch (error) {\n      // Tratar erro\n      console.log({\n        error\n      });\n    }\n  }, []);\n  const image = props.data;\n\n  async function handleUpload(e) {\n    e.preventDefault();\n\n    if (descriptionNone === true) {\n      setDescription('Description none');\n    }\n\n    const validaForm = await ValidaForms([{\n      $campo: title,\n      $nomeCampo: 'titulo',\n      $rules: {\n        min: 4,\n        max: 16,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: categoria,\n      $nomeCampo: 'categoria',\n      $rules: {\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: privacy,\n      $nomeCampo: 'privacidade',\n      $rules: {\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: description,\n      $nomeCampo: 'Descrição',\n      $rules: {\n        min: 8,\n        max: 300,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: editionON,\n      $nomeCampo: 'Edição automatica',\n      $rules: {\n        type: Boolean,\n        required: false\n      }\n    }]);\n\n    if (validaForm !== false) {\n      setAlertContent({\n        title: \"Falha ao realizar upload\",\n        message: validaForm[0],\n        type: \"fail\"\n      });\n      setAlertDisplay(true);\n    } else {\n      if (!image) {\n        setAlertContent({\n          title: \"Falha ao fazer upload\",\n          message: \"Imagem invalida\",\n          type: \"fail\"\n        });\n        setAlertDisplay(true);\n      }\n\n      if (image) {\n        if (image.size >= 3000000) {\n          setAlertContext({});\n          setAlertContent({\n            title: \"Falha ao fazer upload\",\n            message: \"Imagem invalida\",\n            type: \"fail\"\n          });\n          setAlertType('fail');\n          setAlertDisplay(true);\n        }\n\n        const info = {\n          user_id,\n          title,\n          description,\n          category: categoria,\n          privacy\n        };\n        const result = await CompressImage(image, 1);\n        const baseString = result.data;\n\n        try {\n          const response = await axios.post('http://localhost:3001/api/image', {\n            image: baseString,\n            info\n          });\n          setAlertContext({\n            title: \"Sucesso ao fazer upload\",\n            messege: \"A imagem foi adicionada a sua galeria!\"\n          });\n          setAlertType('sucess');\n          setAlertDisplay(true);\n          console.log(response);\n        } catch (error) {\n          setAlertContext({\n            title: \"Falha ao fazer upload\",\n            messege: \"Tente novamente!\"\n          });\n          setAlertType('fail');\n          setAlertDisplay(true);\n          console.log(\"\".concat(error));\n        }\n      }\n    }\n  }\n\n  function handleCancelar(e) {\n    e.preventDefault();\n  } // --------------------------------------------------------------------------------------\n\n\n  console.log(props.name);\n\n  if (props.name === 'option' || !props.name) {\n    return React.createElement(\"div\", {\n      className: \"container-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Titulo da imagem *\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      className: \"f-input\",\n      onChange: event => setTitle(event.target.value),\n      value: title !== '' ? title : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Escolher categoria\"), React.createElement(\"select\", {\n      id: \"category\",\n      onChange: event => setCategoria(event.target.value),\n      value: categoria !== '' ? categoria : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, listCategory ? listCategory.map((item, i) => React.createElement(\"option\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, item)) : '')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"privacy\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Definir privacidade\"), React.createElement(\"select\", {\n      id: \"privacy\",\n      onChange: event => setPrivacy(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"publico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Publico\"), React.createElement(\"option\", {\n      value: \"privado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Privado\"))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(\"button\", {\n      className: \"btn btn-none\",\n      onClick: handleCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Cancelar\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Teve algum problema? tente o \", React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"upload normal\")), React.createElement(Alert, {\n      type: alertType,\n      title: alertContext.title,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }));\n  }\n\n  if (props.name === 'description') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"container-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Defina um pequeno texto como descri\\xE7\\xE3o para sua imagem *\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      className: \"f-textarea\",\n      onChange: event => setDescription(event.target.value),\n      value: description !== '' ? description : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: event => setDescriptionNone(event.target.value),\n      value: descriptionNone !== false ? descriptionNone : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Deixar em branco\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"A descri\\xE7\\xE3o \\xE9 limitada a 300 caracteres, caso n\\xE3o queiera adicionar descri\\xE7\\xE3o, marque a op\\xE7\\xE3o acima.\")), React.createElement(Alert, {\n      title: alertContext.title,\n      type: alertType,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }));\n  }\n\n  if (props.name === 'avancado') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"container-avancado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"editionOn\",\n      className: \"f-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Tratamento automatico da imagem\"), React.createElement(\"select\", {\n      id: \"editionOn\",\n      onChange: event => setEditionOn(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Dasativado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Dasativado\"), React.createElement(\"option\", {\n      value: \"Ativado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Ativado\")))), React.createElement(Alert, {\n      type: alertType,\n      title: alertContext.title,\n      messege: alertContext.messege,\n      display: alertDisplay,\n      onClose: e => {\n        setAlertDisplay(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/Config/index.js"],"names":["React","useState","useMemo","axios","ValidaForms","Alert","CompressImage","user_id","localStorage","getItem","Config","props","title","setTitle","categoria","setCategoria","privacy","setPrivacy","description","setDescription","descriptionNone","setDescriptionNone","editionON","setEditionOn","listCategory","setListCategory","alertDisplay","setAlertDisplay","alertcontent","setAlertContent","alertContext","setAlertContext","alertType","setAlertType","response","get","data","category","error","console","log","image","handleUpload","e","preventDefault","validaForm","$campo","$nomeCampo","$rules","min","max","type","String","required","Boolean","message","size","info","result","baseString","post","messege","handleCancelar","name","event","target","value","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAIA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBAERV,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,QAE3BW,KAF2B;AAAA,QAEpBC,QAFoB;;AAAA,qBAGAZ,QAAQ,CAAC,MAAD,CAHR;AAAA;AAAA,QAG3Ba,SAH2B;AAAA,QAGhBC,YAHgB;;AAAA,qBAIJd,QAAQ,CAAC,SAAD,CAJJ;AAAA;AAAA,QAI3Be,OAJ2B;AAAA,QAIlBC,UAJkB;;AAAA,qBAKIhB,QAAQ,CAAC,EAAD,CALZ;AAAA;AAAA,QAK3BiB,WAL2B;AAAA,QAKdC,cALc;;AAAA,qBAMYlB,QAAQ,CAAC,KAAD,CANpB;AAAA;AAAA,QAM3BmB,eAN2B;AAAA,QAMVC,kBANU;;AAAA,sBAOApB,QAAQ,CAAC,YAAD,CAPR;AAAA;AAAA,QAO3BqB,SAP2B;AAAA,QAOhBC,YAPgB,mBAWlC;;;AAXkC,sBAYMtB,QAAQ,CAAC,EAAD,CAZd;AAAA;AAAA,QAY3BuB,YAZ2B;AAAA,QAYbC,eAZa,mBAclC;;;AAdkC,sBAeMxB,QAAQ,CAAC,KAAD,CAfd;AAAA;AAAA,QAe3ByB,YAf2B;AAAA,QAebC,eAfa;;AAAA,sBAgBM1B,QAAQ,CAAC,EAAD,CAhBd;AAAA;AAAA,QAgB3B2B,YAhB2B;AAAA,QAgBbC,eAhBa;;AAAA,sBAkBM5B,QAAQ,CAAC,EAAD,CAlBd;AAAA;AAAA,QAkB3B6B,YAlB2B;AAAA,QAkBbC,eAlBa;;AAAA,sBAmBA9B,QAAQ,CAAC,SAAD,CAnBR;AAAA;AAAA,QAmB3B+B,SAnB2B;AAAA,QAmBhBC,YAnBgB;;AAqBlC/B,EAAAA,OAAO,CAAC,YAAY;AAChB,QAAI;AACA,YAAMgC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAN,8CAAgD5B,OAAhD,EAAvB;;AAEA,UAAI2B,QAAQ,CAACE,IAAT,CAAcC,QAAd,KAA2B,IAA/B,EAAqC;AACjCZ,QAAAA,eAAe,CAAC,CAAC,MAAD,CAAD,CAAf;AACH,OAFD,MAEO;AACHA,QAAAA,eAAe,CAACS,QAAQ,CAACE,IAAT,CAAcC,QAAf,CAAf;AACH;AAEJ,KATD,CASE,OAAOC,KAAP,EAAc;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA;AAAF,OAAZ;AACH;AACJ,GAdM,EAcJ,EAdI,CAAP;AAgBA,QAAMG,KAAK,GAAG9B,KAAK,CAACyB,IAApB;;AAGA,iBAAeM,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AAGA,QAAIxB,eAAe,KAAK,IAAxB,EAA8B;AAC1BD,MAAAA,cAAc,CAAC,kBAAD,CAAd;AACH;;AAED,UAAM0B,UAAU,GAAG,MAAMzC,WAAW,CAAC,CACjC;AACI0C,MAAAA,MAAM,EAAElC,KADZ;AACmBmC,MAAAA,UAAU,EAAE,QAD/B;AACyCC,MAAAA,MAAM,EAAE;AACzCC,QAAAA,GAAG,EAAE,CADoC;AAEzCC,QAAAA,GAAG,EAAE,EAFoC;AAGzCC,QAAAA,IAAI,EAAEC,MAHmC;AAIzCC,QAAAA,QAAQ,EAAE;AAJ+B;AADjD,KADiC,EASjC;AACIP,MAAAA,MAAM,EAAEhC,SADZ;AACuBiC,MAAAA,UAAU,EAAE,WADnC;AACgDC,MAAAA,MAAM,EAAE;AAChDG,QAAAA,IAAI,EAAEC,MAD0C;AAEhDC,QAAAA,QAAQ,EAAE;AAFsC;AADxD,KATiC,EAejC;AACIP,MAAAA,MAAM,EAAE9B,OADZ;AACqB+B,MAAAA,UAAU,EAAE,aADjC;AACgDC,MAAAA,MAAM,EAAE;AAChDG,QAAAA,IAAI,EAAEC,MAD0C;AAEhDC,QAAAA,QAAQ,EAAE;AAFsC;AADxD,KAfiC,EAqBjC;AACIP,MAAAA,MAAM,EAAE5B,WADZ;AACyB6B,MAAAA,UAAU,EAAE,WADrC;AACkDC,MAAAA,MAAM,EAAE;AAClDC,QAAAA,GAAG,EAAE,CAD6C;AAElDC,QAAAA,GAAG,EAAE,GAF6C;AAGlDC,QAAAA,IAAI,EAAEC,MAH4C;AAIlDC,QAAAA,QAAQ,EAAE;AAJwC;AAD1D,KArBiC,EA6BjC;AACIP,MAAAA,MAAM,EAAExB,SADZ;AACuByB,MAAAA,UAAU,EAAE,mBADnC;AACwDC,MAAAA,MAAM,EAAE;AACxDG,QAAAA,IAAI,EAAEG,OADkD;AAExDD,QAAAA,QAAQ,EAAE;AAF8C;AADhE,KA7BiC,CAAD,CAApC;;AAsCA,QAAIR,UAAU,KAAK,KAAnB,EAA0B;AAEtBhB,MAAAA,eAAe,CAAC;AACZjB,QAAAA,KAAK,EAAE,0BADK;AAEZ2C,QAAAA,OAAO,EAAEV,UAAU,CAAC,CAAD,CAFP;AAGZM,QAAAA,IAAI,EAAE;AAHM,OAAD,CAAf;AAMAxB,MAAAA,eAAe,CAAC,IAAD,CAAf;AAEH,KAVD,MAUO;AAGH,UAAI,CAACc,KAAL,EAAY;AACRZ,QAAAA,eAAe,CAAC;AACZjB,UAAAA,KAAK,EAAE,uBADK;AAEZ2C,UAAAA,OAAO,EAAE,iBAFG;AAGZJ,UAAAA,IAAI,EAAE;AAHM,SAAD,CAAf;AAKAxB,QAAAA,eAAe,CAAC,IAAD,CAAf;AAEH;;AAGD,UAAIc,KAAJ,EAAW;AACP,YAAIA,KAAK,CAACe,IAAN,IAAc,OAAlB,EAA2B;AACvBzB,UAAAA,eAAe,CAAC,EAAD,CAAf;AAGAF,UAAAA,eAAe,CAAC;AACZjB,YAAAA,KAAK,EAAE,uBADK;AAEZ2C,YAAAA,OAAO,EAAE,iBAFG;AAGZJ,YAAAA,IAAI,EAAE;AAHM,WAAD,CAAf;AAKAlB,UAAAA,YAAY,CAAC,MAAD,CAAZ;AACAN,UAAAA,eAAe,CAAC,IAAD,CAAf;AAEH;;AAGD,cAAM8B,IAAI,GAAG;AACTlD,UAAAA,OADS;AAETK,UAAAA,KAFS;AAGTM,UAAAA,WAHS;AAITmB,UAAAA,QAAQ,EAAEvB,SAJD;AAKTE,UAAAA;AALS,SAAb;AASA,cAAM0C,MAAM,GAAG,MAAMpD,aAAa,CAACmC,KAAD,EAAQ,CAAR,CAAlC;AAEA,cAAMkB,UAAU,GAAGD,MAAM,CAACtB,IAA1B;;AAEA,YAAI;AACA,gBAAMF,QAAQ,GAAG,MAAM/B,KAAK,CAACyD,IAAN,CAAW,iCAAX,EAA8C;AAAEnB,YAAAA,KAAK,EAAEkB,UAAT;AAAqBF,YAAAA;AAArB,WAA9C,CAAvB;AACA1B,UAAAA,eAAe,CAAC;AACZnB,YAAAA,KAAK,EAAE,yBADK;AAEZiD,YAAAA,OAAO,EAAE;AAFG,WAAD,CAAf;AAIA5B,UAAAA,YAAY,CAAC,QAAD,CAAZ;AACAN,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEH,SAVD,CAUE,OAAOI,KAAP,EAAc;AACZP,UAAAA,eAAe,CAAC;AACZnB,YAAAA,KAAK,EAAE,uBADK;AAEZiD,YAAAA,OAAO,EAAE;AAFG,WAAD,CAAf;AAIA5B,UAAAA,YAAY,CAAC,MAAD,CAAZ;AACAN,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,UAAAA,OAAO,CAACC,GAAR,WAAeF,KAAf;AACH;AACJ;AACJ;AAEJ;;AAED,WAASwB,cAAT,CAAwBnB,CAAxB,EAA2B;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACH,GArKiC,CAuKlC;;;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAK,CAACoD,IAAlB;;AAEA,MAAIpD,KAAK,CAACoD,IAAN,KAAe,QAAf,IAA2B,CAACpD,KAAK,CAACoD,IAAtC,EAA4C;AAExC,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,SAAS,EAAC,SAHd;AAII,MAAA,QAAQ,EAAEC,KAAK,IAAInD,QAAQ,CAACmD,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ/B;AAKI,MAAA,KAAK,EAAEtD,KAAK,KAAK,EAAV,GAAeA,KAAf,GAAuB,EALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,QAAQ,EAAEoD,KAAK,IAAIjD,YAAY,CAACiD,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFnC;AAGI,MAAA,KAAK,EAAEpD,SAAS,KAAK,EAAd,GAAmBA,SAAnB,GAA+B,EAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKU,YAAY,GAAGA,YAAY,CAAC2C,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAC7B;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CADY,CAAH,GAER,EAPT,CAFJ,CAZJ,EA0BI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,QAAQ,EAAEJ,KAAK,IAAI/C,UAAU,CAAC+C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CAFJ,CA1BJ,EAqCI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAExB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEoB,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CArCJ,EA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAmC;AAAG,MAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAnC,CA1CJ,EA2CI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE9B,SADV;AAEI,MAAA,KAAK,EAAEF,YAAY,CAAClB,KAFxB;AAGI,MAAA,OAAO,EAAEkB,YAAY,CAAC+B,OAH1B;AAII,MAAA,OAAO,EAAEnC,YAJb;AAKI,MAAA,OAAO,EAAGiB,CAAD,IAAO;AAAEhB,QAAAA,eAAe,CAAC,KAAD,CAAf;AAAwB,OAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CJ,CADJ;AAwDH;;AAID,MAAIhB,KAAK,CAACoD,IAAN,KAAe,aAAnB,EAAkC;AAC9B,WACI,0CACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,SAAS,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADJ,EAEI;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,QAAQ,EAAEC,KAAK,IAAI7C,cAAc,CAAC6C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHrC;AAII,MAAA,KAAK,EAAEhD,WAAW,KAAK,EAAhB,GAAqBA,WAArB,GAAmC,EAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,OAAO,EAAE8C,KAAK,IAAI3C,kBAAkB,CAAC2C,KAAK,CAACC,MAAN,CAAaC,KAAd,CADxC;AAEI,MAAA,KAAK,EAAE9C,eAAe,KAAK,KAApB,GAA4BA,eAA5B,GAA8C,KAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,CAZJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sIAnBJ,CADJ,EAsBI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEU,YAAY,CAAClB,KADxB;AAEI,MAAA,IAAI,EAAEoB,SAFV;AAGI,MAAA,OAAO,EAAEF,YAAY,CAAC+B,OAH1B;AAII,MAAA,OAAO,EAAEnC,YAJb;AAKI,MAAA,OAAO,EAAGiB,CAAD,IAAO;AAAEhB,QAAAA,eAAe,CAAC,KAAD,CAAf;AAAwB,OAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,CADJ;AAgCH;;AAED,MAAIhB,KAAK,CAACoD,IAAN,KAAe,UAAnB,EAA+B;AAC3B,WACI,0CACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAA2B,MAAA,SAAS,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,EAEI;AAAQ,MAAA,EAAE,EAAC,WAAX;AACI,MAAA,QAAQ,EAAEC,KAAK,IAAIzC,YAAY,CAACyC,KAAK,CAACC,MAAN,CAAaC,KAAd,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAFJ,CADJ,CADJ,EAYI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAElC,SADV;AAEI,MAAA,KAAK,EAAEF,YAAY,CAAClB,KAFxB;AAGI,MAAA,OAAO,EAAEkB,YAAY,CAAC+B,OAH1B;AAII,MAAA,OAAO,EAAEnC,YAJb;AAKI,MAAA,OAAO,EAAGiB,CAAD,IAAO;AAAEhB,QAAAA,eAAe,CAAC,KAAD,CAAf;AAAwB,OAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAsBH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport axios from 'axios';\n\nimport ValidaForms from \"../../../componentes/ValidaForms\";\nimport Alert from \"../../../componentes/Alert\";\nimport CompressImage from \"../../../componentes/compress\";\n\n\n\nconst user_id = localStorage.getItem(\"user_id\");\n\n\nexport default function Config(props) {\n\n    const [title, setTitle] = useState('');\n    const [categoria, setCategoria] = useState('none');\n    const [privacy, setPrivacy] = useState('publico');\n    const [description, setDescription] = useState('');\n    const [descriptionNone, setDescriptionNone] = useState(false);\n    const [editionON, setEditionOn] = useState('Desativado');\n\n\n\n    // Categorias\n    const [listCategory, setListCategory] = useState([])\n\n    // alert\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertcontent, setAlertContent] = useState([])\n\n    const [alertContext, setAlertContext] = useState([]);\n    const [alertType, setAlertType] = useState('primary');\n\n    useMemo(async () => {\n        try {\n            const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n            if (response.data.category === null) {\n                setListCategory(['none']);\n            } else {\n                setListCategory(response.data.category);\n            }\n\n        } catch (error) {\n            // Tratar erro\n            console.log({ error })\n        }\n    }, [])\n\n    const image = props.data;\n\n\n    async function handleUpload(e) {\n        e.preventDefault();\n\n\n        if (descriptionNone === true) {\n            setDescription('Description none');\n        }\n\n        const validaForm = await ValidaForms([\n            {\n                $campo: title, $nomeCampo: 'titulo', $rules: {\n                    min: 4,\n                    max: 16,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: categoria, $nomeCampo: 'categoria', $rules: {\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: privacy, $nomeCampo: 'privacidade', $rules: {\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: description, $nomeCampo: 'Descrição', $rules: {\n                    min: 8,\n                    max: 300,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: editionON, $nomeCampo: 'Edição automatica', $rules: {\n                    type: Boolean,\n                    required: false\n                }\n            },\n\n        ])\n\n        if (validaForm !== false) {\n\n            setAlertContent({\n                title: \"Falha ao realizar upload\",\n                message: validaForm[0],\n                type: \"fail\"\n            })\n\n            setAlertDisplay(true);\n\n        } else {\n\n\n            if (!image) {\n                setAlertContent({\n                    title: \"Falha ao fazer upload\",\n                    message: \"Imagem invalida\",\n                    type: \"fail\"\n                })\n                setAlertDisplay(true)\n\n            }\n\n\n            if (image) {\n                if (image.size >= 3000000) {\n                    setAlertContext({\n\n                    })\n                    setAlertContent({\n                        title: \"Falha ao fazer upload\",\n                        message: \"Imagem invalida\",\n                        type: \"fail\"\n                    })\n                    setAlertType('fail')\n                    setAlertDisplay(true)\n\n                }\n\n\n                const info = {\n                    user_id,\n                    title,\n                    description,\n                    category: categoria,\n                    privacy,\n\n                }\n\n                const result = await CompressImage(image, 1);\n\n                const baseString = result.data;\n\n                try {\n                    const response = await axios.post('http://localhost:3001/api/image', { image: baseString, info })\n                    setAlertContext({\n                        title: \"Sucesso ao fazer upload\",\n                        messege: \"A imagem foi adicionada a sua galeria!\"\n                    })\n                    setAlertType('sucess')\n                    setAlertDisplay(true)\n                    console.log(response);\n\n                } catch (error) {\n                    setAlertContext({\n                        title: \"Falha ao fazer upload\",\n                        messege: \"Tente novamente!\"\n                    })\n                    setAlertType('fail')\n                    setAlertDisplay(true)\n                    console.log(`${error}`)\n                }\n            }\n        }\n\n    }\n\n    function handleCancelar(e) {\n        e.preventDefault();\n    }\n\n    // --------------------------------------------------------------------------------------\n\n    console.log(props.name)\n\n    if (props.name === 'option' || !props.name) {\n\n        return (\n            <div className=\"container-option\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\" className=\"f-label\">Titulo da imagem *</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        className='f-input'\n                        onChange={event => setTitle(event.target.value)}\n                        value={title !== '' ? title : ''}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\" className=\"f-label\">Escolher categoria</label>\n                    <select\n                        id=\"category\"\n                        onChange={event => setCategoria(event.target.value)}\n                        value={categoria !== '' ? categoria : ''}\n                    >\n                        {listCategory ? listCategory.map((item, i) => (\n                            <option key={i}>{item}</option>\n                        )) : ''}\n                    </select>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"privacy\" className=\"f-label\">Definir privacidade</label>\n                    <select\n                        id=\"privacy\"\n                        onChange={event => setPrivacy(event.target.value)}\n                    >\n                        <option value=\"publico\">Publico</option>\n                        <option value=\"privado\">Privado</option>\n                    </select>\n                </div>\n\n                <div className=\"form-row\">\n                    <button className=\"btn btn-primary\" onClick={handleUpload}>Salvar</button>\n                    <button className=\"btn btn-none\" onClick={handleCancelar}>Cancelar</button>\n                </div>\n\n                <span>Teve algum problema? tente o <a href=\"/#\">upload normal</a></span>\n                <Alert\n                    type={alertType}\n                    title={alertContext.title}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n\n\n            </div>\n\n        )\n    }\n\n\n\n    if (props.name === 'description') {\n        return (\n            <>\n                <div className=\"container-description\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\" className=\"f-label\">Defina um pequeno texto como descrição para sua imagem *</label>\n                        <textarea\n                            id=\"description\"\n                            className='f-textarea'\n                            onChange={event => setDescription(event.target.value)}\n                            value={description !== '' ? description : ''}\n                        >\n                        </textarea>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <input type=\"checkbox\"\n                            onClick={event => setDescriptionNone(event.target.value)}\n                            value={descriptionNone !== false ? descriptionNone : false}\n                        />\n                        <span>Deixar em branco</span>\n                    </div>\n                    <span>A descrição é limitada a 300 caracteres, caso não queiera adicionar descrição, marque a opção acima.</span>\n                </div>\n                <Alert\n                    title={alertContext.title}\n                    type={alertType}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n            </>\n        )\n    }\n\n    if (props.name === 'avancado') {\n        return (\n            <>\n                <div className=\"container-avancado\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"editionOn\" className=\"f-label\">Tratamento automatico da imagem</label>\n                        <select id=\"editionOn\"\n                            onChange={event => setEditionOn(event.target.value)}\n                        >\n                            <option value=\"Dasativado\">Dasativado</option>\n                            <option value=\"Ativado\">Ativado</option>\n                        </select>\n                    </div>\n                </div>\n                <Alert\n                    type={alertType}\n                    title={alertContext.title}\n                    messege={alertContext.messege}\n                    display={alertDisplay}\n                    onClose={(e) => { setAlertDisplay(false) }}\n                />\n            </>\n        )\n    }\n\n    return <div />\n}"]},"metadata":{},"sourceType":"module"}