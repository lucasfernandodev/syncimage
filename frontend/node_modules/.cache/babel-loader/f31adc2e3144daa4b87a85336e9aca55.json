{"ast":null,"code":"function limiter($campo, $option = {}) {\n  // {$min = '', $max = ''}\n  if ($option.$min !== '') {\n    if ($campo.length <= $option.$min) {\n      return false;\n    }\n  }\n\n  if ($option.$max !== '') {\n    console.log($campo.length);\n\n    if ($campo.length >= $option.$max) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default async function ValidaForms($data = []) {\n  let error = [];\n\n  if (!$data) {\n    error.push('Falha ao validar campos!');\n  }\n\n  const numberCamps = $data.length;\n\n  for (var i = 0; i < numberCamps; i++) {\n    const _$data$i = $data[i],\n          $campo = _$data$i.$campo,\n          $nomeCampo = _$data$i.$nomeCampo,\n          $rules = _$data$i.$rules;\n\n    if ($rules) {\n      if ($rules.required === true) {\n        // Valida String\n        if ($rules.type === String) {\n          if ($campo === 'undefined' || $campo === '' || $campo === null || $campo.length === 0) {\n            error.push(\"O campo \".concat($nomeCampo, \" n\\xE3o deve ficar em branco!\"));\n          }\n\n          if ($rules.min) {\n            // Verifica a quantidade minima de Caracteres da String\n            if (!limiter($campo, {\n              $min: $rules.min\n            })) {\n              error.push(\"O campo \".concat($nomeCampo, \" n\\xE3o deve ter menos de \").concat($rules.min, \" letras.\"));\n            }\n          } // Verifica a quantidade maxima de Caracteres da String\n\n\n          if ($rules.max) {\n            if (!limiter($campo, {\n              $max: $rules.max\n            })) {\n              error.push(\"O campo \".concat($nomeCampo, \" n\\xE3o deve ter mais de \").concat($rules.max, \" letras.\"));\n            }\n          }\n        }\n\n        if ($rules.type === Boolean) {\n          if ($campo === false) {\n            error.push(\"O campo \".concat($nomeCampo, \" n\\xE3o pode ficar desmarcado!\"));\n          }\n        }\n      }\n    }\n  } // [\n  //     {$campo, $nomeCampo, $rules}\n  // ]\n  // $rules = {\n  //     min: Number,\n  //     max: Number,\n  //     type: Boolean & String & Number & Email,\n  //     required : Boolean // True or False\n  // }\n  // Retorno\n\n\n  if (error.length === 0) {\n    return false;\n  } else {\n    return error;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/ValidaForms.js"],"names":["limiter","$campo","$option","$min","length","$max","console","log","ValidaForms","$data","error","push","numberCamps","i","$nomeCampo","$rules","required","type","String","min","max","Boolean"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,OAAO,GAAG,EAAnC,EAAsC;AAClC;AAEA,MAAGA,OAAO,CAACC,IAAR,KAAiB,EAApB,EAAuB;AACnB,QAAGF,MAAM,CAACG,MAAP,IAAiBF,OAAO,CAACC,IAA5B,EAAiC;AAC7B,aAAO,KAAP;AACH;AACJ;;AAGD,MAAGD,OAAO,CAACG,IAAR,KAAiB,EAApB,EAAuB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,MAAnB;;AACA,QAAGH,MAAM,CAACG,MAAP,IAAiBF,OAAO,CAACG,IAA5B,EAAiC;AAE7B,aAAO,KAAP;AAEH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,eAAe,eAAeG,WAAf,CAA2BC,KAAK,GAAG,EAAnC,EAAsC;AAEjD,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAG,CAACD,KAAJ,EAAU;AACNC,IAAAA,KAAK,CAACC,IAAN,CAAW,0BAAX;AACH;;AAED,QAAMC,WAAW,GAAGH,KAAK,CAACL,MAA1B;;AAGA,OAAI,IAAIS,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,WAAnB,EAAgCC,CAAC,EAAjC,EAAoC;AAAA,qBACKJ,KAAK,CAACI,CAAD,CADV;AAAA,UACzBZ,MADyB,YACzBA,MADyB;AAAA,UACjBa,UADiB,YACjBA,UADiB;AAAA,UACLC,MADK,YACLA,MADK;;AAGhC,QAAGA,MAAH,EAAU;AACN,UAAGA,MAAM,CAACC,QAAP,KAAoB,IAAvB,EACA;AACI;AACA,YAAGD,MAAM,CAACE,IAAP,KAAgBC,MAAnB,EAA0B;AAEtB,cAAGjB,MAAM,KAAK,WAAX,IAA0BA,MAAM,KAAK,EAArC,IAA2CA,MAAM,KAAK,IAAtD,IAA8DA,MAAM,CAACG,MAAP,KAAkB,CAAnF,EAAqF;AACjFM,YAAAA,KAAK,CAACC,IAAN,mBAAsBG,UAAtB;AACH;;AAED,cAAGC,MAAM,CAACI,GAAV,EAAc;AAEV;AACA,gBAAG,CAACnB,OAAO,CAACC,MAAD,EAAS;AAACE,cAAAA,IAAI,EAAGY,MAAM,CAACI;AAAf,aAAT,CAAX,EAAyC;AACrCT,cAAAA,KAAK,CAACC,IAAN,mBAAsBG,UAAtB,uCAA0DC,MAAM,CAACI,GAAjE;AACH;AACJ,WAZqB,CActB;;;AACA,cAAGJ,MAAM,CAACK,GAAV,EAAc;AAGV,gBAAG,CAACpB,OAAO,CAACC,MAAD,EAAS;AAACI,cAAAA,IAAI,EAAGU,MAAM,CAACK;AAAf,aAAT,CAAX,EAAyC;AACrCV,cAAAA,KAAK,CAACC,IAAN,mBAAsBG,UAAtB,sCAAyDC,MAAM,CAACK,GAAhE;AACH;AACJ;AAIJ;;AAED,YAAGL,MAAM,CAACE,IAAP,KAAgBI,OAAnB,EAA2B;AACvB,cAAGpB,MAAM,KAAK,KAAd,EAAoB;AAChBS,YAAAA,KAAK,CAACC,IAAN,mBAAsBG,UAAtB;AACH;AACJ;AACJ;AACJ;AAGJ,GAtDgD,CAwDjD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,MAAGJ,KAAK,CAACN,MAAN,KAAiB,CAApB,EAAsB;AAClB,WAAO,KAAP;AACH,GAFD,MAEK;AACD,WAAOM,KAAP;AACH;AAEJ","sourcesContent":["function limiter($campo, $option = {}){\n    // {$min = '', $max = ''}\n\n    if($option.$min !== ''){\n        if($campo.length <= $option.$min){\n            return false;\n        }\n    }\n\n\n    if($option.$max !== ''){\n        console.log($campo.length);\n        if($campo.length >= $option.$max){\n           \n            return false;\n\n        }\n    }\n\n    return true;\n}\n\nexport default async function ValidaForms($data = []){\n\n    let error = [];\n\n    if(!$data){\n        error.push('Falha ao validar campos!');\n    }\n\n    const numberCamps = $data.length;\n\n\n    for(var i = 0; i < numberCamps; i++){\n        const {$campo, $nomeCampo, $rules} = $data[i];\n\n        if($rules){\n            if($rules.required === true)\n            {\n                // Valida String\n                if($rules.type === String){\n\n                    if($campo === 'undefined' || $campo === '' || $campo === null || $campo.length === 0){\n                        error.push(`O campo ${$nomeCampo} n達o deve ficar em branco!`);\n                    }\n\n                    if($rules.min){\n\n                        // Verifica a quantidade minima de Caracteres da String\n                        if(!limiter($campo, {$min : $rules.min})){\n                            error.push(`O campo ${$nomeCampo} n達o deve ter menos de ${$rules.min} letras.`);\n                        }\n                    }\n\n                    // Verifica a quantidade maxima de Caracteres da String\n                    if($rules.max){\n\n                        \n                        if(!limiter($campo, {$max : $rules.max})){\n                            error.push(`O campo ${$nomeCampo} n達o deve ter mais de ${$rules.max} letras.`);\n                        }\n                    }    \n                    \n\n                    \n                }\n\n                if($rules.type === Boolean){\n                    if($campo === false){\n                        error.push(`O campo ${$nomeCampo} n達o pode ficar desmarcado!`);\n                    }\n                }\n            }\n        }\n\n\n    }\n\n    // [\n    //     {$campo, $nomeCampo, $rules}\n    // ]\n\n    // $rules = {\n    //     min: Number,\n    //     max: Number,\n    //     type: Boolean & String & Number & Email,\n    //     required : Boolean // True or False\n    // }\n\n\n    // Retorno\n    if(error.length === 0){\n        return false;\n    }else{\n        return error;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}