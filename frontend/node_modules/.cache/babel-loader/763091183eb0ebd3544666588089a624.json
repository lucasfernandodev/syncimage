{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Login/index.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Alert from \"../../componentes/Alert\";\nimport ValidaForms from \"../../componentes/ValidaForms\";\nimport \"./style.css\";\nimport loading from \"../../assets/loading.svg\";\nimport woman from \"../../assets/woman.jpg\";\nexport default function Login({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginON = _useState6[0],\n        setLoginOn = _useState6[1]; // alert\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertDisplay = _useState8[0],\n        setAlertDisplay = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertContext = _useState10[0],\n        setAlertContext = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        alertType = _useState12[0],\n        setAlertType = _useState12[1];\n\n  type = {\n    alertType\n  };\n\n  async function handlerLogin(e) {\n    e.preventDefault();\n    const validaForm = await ValidaForms([{\n      $campo: email,\n      $nomeCampo: 'email',\n      $rules: {\n        min: 4,\n        max: 32,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: password,\n      $nomeCampo: 'password',\n      $rules: {\n        min: 4,\n        max: 12,\n        type: String,\n        required: true\n      }\n    }, {\n      $campo: loginON,\n      $nomeCampo: 'Lembrar-me',\n      $rules: {\n        type: Boolean,\n        required: false\n      }\n    }]);\n\n    if (validaForm !== false) {\n      setAlertContext({\n        title: \"Falha ao logar\",\n        messege: validaForm[0]\n      });\n      setAlertType('fail');\n      setAlertDisplay(true);\n      setLoading('Cadastrar');\n    } // const vEmail = ValidaForms(email, 'e-mail', { min: 4, max: 12 })\n    // const vPassword = ValidaForms(password, 'password', { min: 4, max: 16 })\n    // if (vEmail.length > 0) {\n    //     setAlertContext({\n    //         title: \"Falha ao logar\",\n    //         messege: vEmail[0].messege\n    //     })\n    //     setAlertDisplay(true);\n    // }\n    // if (vPassword.length > 0) {\n    //     setAlertContext({\n    //         title: \"Falha ao logar\",\n    //         messege: vPassword[0].messege\n    //     })\n    //     setAlertDisplay(true);\n    // }\n    // if (vEmail.length === 0 && vPassword.length === 0) {\n    //     try {\n    //         const autheticate = await axios.post(`http://localhost:3001/api/authenticate`, {email, password});\n    //         localStorage.setItem('user_id', autheticate.data._id);\n    //         history.push('/galeria')\n    //     } catch (err) {\n    //         const erro = {error: err};\n    //         if(erro.error.response){\n    //             const message = erro.error.response.data.message\n    //             setAlertContext({\n    //                 title: \"Falha ao fazer login\",\n    //                 messege: message\n    //             })\n    //             setAlertDisplay(true);\n    //         }else{\n    //             // Falha no servidor\n    //         }\n    //     }\n    // }\n\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-login\",\n    onSubmit: handlerLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-woman\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: woman,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Ola,\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Bem vindo!\")), React.createElement(\"span\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Fa\\xE7a upload das suas imagens, com qualidade e tenha acesso aonde estiver pelo computador ou celular.\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"f-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Seu email\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"f-input\",\n    placeholder: \"E-mail\",\n    onChange: event => setEmail(event.target.value),\n    maxLength: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"f-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Sua senha\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    className: \"f-input\",\n    placeholder: \"Digite uma senha segura\",\n    onChange: event => setPassword(event.target.value),\n    maxLength: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"lebrar-me\",\n    onChange: event => setLoginOn(event.target.checked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"lebrar-me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Manter conectado\")), React.createElement(\"button\", {\n    className: \"btn-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"img\", {\n    src: loading,\n    alt: \"\",\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"no-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"N\\xE3o tem uma conta? \", React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Crie uma agora\")), React.createElement(Alert, {\n    title: alertContext.title,\n    messege: alertContext.messege,\n    display: alertDisplay,\n    onClose: e => {\n      setAlertDisplay(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Login/index.js"],"names":["React","useState","axios","Alert","ValidaForms","woman","Login","history","email","setEmail","password","setPassword","loginON","setLoginOn","alertDisplay","setAlertDisplay","alertContext","setAlertContext","alertType","setAlertType","type","handlerLogin","e","preventDefault","validaForm","$campo","$nomeCampo","$rules","min","max","String","required","Boolean","title","messege","setLoading","event","target","value","checked","loading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAO,aAAP;;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AAAA,oBAEbN,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAEhCO,KAFgC;AAAA,QAEzBC,QAFyB;;AAAA,qBAGPR,QAAQ,CAAC,EAAD,CAHD;AAAA;AAAA,QAGhCS,QAHgC;AAAA,QAGtBC,WAHsB;;AAAA,qBAITV,QAAQ,CAAC,EAAD,CAJC;AAAA;AAAA,QAIhCW,OAJgC;AAAA,QAIvBC,UAJuB,kBAOvC;;;AAPuC,qBAQCZ,QAAQ,CAAC,KAAD,CART;AAAA;AAAA,QAQhCa,YARgC;AAAA,QAQlBC,eARkB;;AAAA,qBASCd,QAAQ,CAAC,EAAD,CATT;AAAA;AAAA,QAShCe,YATgC;AAAA,QASlBC,eATkB;;AAAA,sBAULhB,QAAQ,CAAC,EAAD,CAVH;AAAA;AAAA,QAUhCiB,SAVgC;AAAA,QAUrBC,YAVqB;;AAWvCC,EAAAA,IAAI,GAAC;AAACF,IAAAA;AAAD,GAAL;;AAEA,iBAAeG,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAG,MAAMpB,WAAW,CAAC,CACjC;AACIqB,MAAAA,MAAM,EAAEjB,KADZ;AACmBkB,MAAAA,UAAU,EAAE,OAD/B;AACwCC,MAAAA,MAAM,EAAE;AACxCC,QAAAA,GAAG,EAAE,CADmC;AAExCC,QAAAA,GAAG,EAAE,EAFmC;AAGxCT,QAAAA,IAAI,EAAEU,MAHkC;AAIxCC,QAAAA,QAAQ,EAAE;AAJ8B;AADhD,KADiC,EASjC;AACIN,MAAAA,MAAM,EAAEf,QADZ;AACsBgB,MAAAA,UAAU,EAAE,UADlC;AAC8CC,MAAAA,MAAM,EAAE;AAC9CC,QAAAA,GAAG,EAAE,CADyC;AAE9CC,QAAAA,GAAG,EAAE,EAFyC;AAG9CT,QAAAA,IAAI,EAAEU,MAHwC;AAI9CC,QAAAA,QAAQ,EAAE;AAJoC;AADtD,KATiC,EAiBjC;AACIN,MAAAA,MAAM,EAAEb,OADZ;AACqBc,MAAAA,UAAU,EAAE,YADjC;AAC+CC,MAAAA,MAAM,EAAE;AAC/CP,QAAAA,IAAI,EAAEY,OADyC;AAE/CD,QAAAA,QAAQ,EAAE;AAFqC;AADvD,KAjBiC,CAAD,CAApC;;AA0BA,QAAIP,UAAU,KAAK,KAAnB,EAA0B;AACtBP,MAAAA,eAAe,CAAC;AACZgB,QAAAA,KAAK,EAAE,gBADK;AAEZC,QAAAA,OAAO,EAAEV,UAAU,CAAC,CAAD;AAFP,OAAD,CAAf;AAIAL,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAJ,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAoB,MAAAA,UAAU,CAAC,WAAD,CAAV;AACH,KArC0B,CAuC3B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;;AACH;;AAGD,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEd,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEhB,KAAV;AAAiB,IAAA,GAAG,EAAC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,CADJ,EAKI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GALJ,EAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,SAAS,EAAC,SAHd;AAII,IAAA,WAAW,EAAC,QAJhB;AAKI,IAAA,QAAQ,EAAE+B,KAAK,IAAI3B,QAAQ,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAL/B;AAMI,IAAA,SAAS,EAAC,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,EAmBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,SAAS,EAAC,SAHd;AAII,IAAA,WAAW,EAAC,yBAJhB;AAKI,IAAA,QAAQ,EAAEF,KAAK,IAAIzB,WAAW,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CALlC;AAMI,IAAA,SAAS,EAAC,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnBJ,EA8BI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,WAA1B;AAAsC,IAAA,QAAQ,EAAEF,KAAK,IAAIvB,UAAU,CAACuB,KAAK,CAACC,MAAN,CAAaE,OAAd,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CA9BJ,EAmCI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnCJ,EAoCI;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,EAAvB;AAA0B,IAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCJ,EAqCI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8C;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9C,CArCJ,EAsCI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAExB,YAAY,CAACiB,KADxB;AAEI,IAAA,OAAO,EAAEjB,YAAY,CAACkB,OAF1B;AAGI,IAAA,OAAO,EAAEpB,YAHb;AAII,IAAA,OAAO,EAAGQ,CAAD,IAAO;AAAEP,MAAAA,eAAe,CAAC,KAAD,CAAf;AAAwB,KAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,CAJJ,CADJ,CADJ;AAqDH","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Alert from \"../../componentes/Alert\";\nimport ValidaForms from \"../../componentes/ValidaForms\";\n\nimport \"./style.css\";\nimport loading from \"../../assets/loading.svg\";\nimport woman from \"../../assets/woman.jpg\";\n\n\nexport default function Login({ history }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginON, setLoginOn] = useState([])\n\n\n    // alert\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertContext, setAlertContext] = useState([]);\n    const [alertType, setAlertType] = useState('')\n    type={alertType}\n\n    async function handlerLogin(e) {\n        e.preventDefault();\n\n        const validaForm = await ValidaForms([\n            {\n                $campo: email, $nomeCampo: 'email', $rules: {\n                    min: 4,\n                    max: 32,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: password, $nomeCampo: 'password', $rules: {\n                    min: 4,\n                    max: 12,\n                    type: String,\n                    required: true\n                }\n            },\n            {\n                $campo: loginON, $nomeCampo: 'Lembrar-me', $rules: {\n                    type: Boolean,\n                    required: false\n                }\n            },\n\n        ])\n\n        if (validaForm !== false) {\n            setAlertContext({\n                title: \"Falha ao logar\",\n                messege: validaForm[0]\n            })\n            setAlertType('fail');\n            setAlertDisplay(true);\n            setLoading('Cadastrar');\n        }\n\n        // const vEmail = ValidaForms(email, 'e-mail', { min: 4, max: 12 })\n        // const vPassword = ValidaForms(password, 'password', { min: 4, max: 16 })\n\n        // if (vEmail.length > 0) {\n        //     setAlertContext({\n        //         title: \"Falha ao logar\",\n        //         messege: vEmail[0].messege\n        //     })\n        //     setAlertDisplay(true);\n        // }\n\n        // if (vPassword.length > 0) {\n        //     setAlertContext({\n        //         title: \"Falha ao logar\",\n        //         messege: vPassword[0].messege\n        //     })\n        //     setAlertDisplay(true);\n        // }\n\n        // if (vEmail.length === 0 && vPassword.length === 0) {\n   \n            \n        //     try {\n        //         const autheticate = await axios.post(`http://localhost:3001/api/authenticate`, {email, password});\n        //         localStorage.setItem('user_id', autheticate.data._id);\n        //         history.push('/galeria')\n\n                \n        //     } catch (err) {\n\n        //         const erro = {error: err};\n\n        //         if(erro.error.response){\n\n        //             const message = erro.error.response.data.message\n\n                  \n        //             setAlertContext({\n        //                 title: \"Falha ao fazer login\",\n        //                 messege: message\n        //             })\n        //             setAlertDisplay(true);\n        //         }else{\n        //             // Falha no servidor\n        //         }\n\n                \n        //     }\n\n\n\n\n\n\n        // }\n    }\n\n\n    return (\n        <div className=\"container-main\">\n            <form className=\"form-login\" onSubmit={handlerLogin}>\n                <div className=\"container-woman\">\n                    <img src={woman} alt=\"\" />\n                </div>\n                <div className=\"content\">\n                    <h1 className=\"title\">\n                        Ola,\n                   <span>Bem vindo!</span>\n                    </h1>\n                    <span className=\"description\">\n                        Faça upload das suas imagens, com qualidade e tenha acesso aonde estiver pelo computador ou celular.\n                </span>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" className=\"f-label\">Seu email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            className=\"f-input\"\n                            placeholder=\"E-mail\"\n                            onChange={event => setEmail(event.target.value)}\n                            maxLength=\"30\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"f-label\">Sua senha</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            className=\"f-input\"\n                            placeholder=\"Digite uma senha segura\"\n                            onChange={event => setPassword(event.target.value)}\n                            maxLength=\"10\"\n                        />\n                    </div>\n                    <div className=\"form-row\">\n                        <input type=\"checkbox\" id=\"lebrar-me\" onChange={event => setLoginOn(event.target.checked)} />\n                        <label htmlFor=\"lebrar-me\">Manter conectado</label>\n                    </div>\n\n                    <button className=\"btn-login\">Login</button>\n                    <img src={loading} alt=\"\" className=\"loading\" />\n                    <span className=\"no-count\">Não tem uma conta? <a href=\"#\">Crie uma agora</a></span>\n                    <Alert\n                        title={alertContext.title}\n                        messege={alertContext.messege}\n                        display={alertDisplay}\n                        onClose={(e) => { setAlertDisplay(false) }} />\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}