{"ast":null,"code":"export default function ValidaForms(campo, $campoName, $rules = {}) {\n  var erro = []; // [\n  //     {$campo, $nomeCampo, $rules}\n  // ]\n\n  $rules = {\n    min: Number,\n    max: Number,\n    type: Boolean & String & Number & Email,\n    required: Boolean // True or False\n\n  };\n\n  if (option.type) {\n    if (option.type == Boolean) {\n      if (campo !== true) {\n        console.log(campo);\n        erro.push({\n          messege: \"O \".concat(campoName, \" n\\xE3o pode ficar desmarcado.\")\n        });\n      }\n    }\n  } else {\n    if (!campo || campo === null || typeof campo === 'undefined' === 'undefined' || campo === '') {\n      erro.push({\n        messege: \"O campo \".concat(campoName, \" n\\xE3o pode ficar em branco.\")\n      });\n    }\n\n    if (option.min) {\n      if (campo.lenght < option.min) {\n        erro.push({\n          messege: \"O \".concat(campoName, \" deve conter no minimo \").concat(option.min, \" letras.\")\n        });\n      }\n    }\n\n    if (option.max) {\n      if (campo.lenght >= option.max) {\n        erro.push({\n          messege: \"O \".concat(campoName, \" deve conter no maximo \").concat(option.max, \" letras.\")\n        });\n      }\n    }\n  }\n\n  return erro;\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/ValidaForms.js"],"names":["ValidaForms","campo","$campoName","$rules","erro","min","Number","max","type","Boolean","String","Email","required","option","console","log","push","messege","campoName","lenght"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,KAArB,EAA2BC,UAA3B,EAAuCC,MAAM,GAAG,EAAhD,EAAmD;AAE9D,MAAIC,IAAI,GAAG,EAAX,CAF8D,CAI9D;AACA;AACA;;AAEAD,EAAAA,MAAM,GAAG;AACLE,IAAAA,GAAG,EAAEC,MADA;AAELC,IAAAA,GAAG,EAAED,MAFA;AAGLE,IAAAA,IAAI,EAAEC,OAAO,GAAGC,MAAV,GAAmBJ,MAAnB,GAA4BK,KAH7B;AAILC,IAAAA,QAAQ,EAAGH,OAJN,CAIc;;AAJd,GAAT;;AAQA,MAAGI,MAAM,CAACL,IAAV,EAAe;AACX,QAAGK,MAAM,CAACL,IAAP,IAAeC,OAAlB,EAA0B;AACtB,UAAGR,KAAK,KAAK,IAAb,EAAkB;AACda,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAG,QAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOC,SAAP;AADD,SAAV;AAGH;AACJ;AAEJ,GAVD,MAUK;AAGD,QAAG,CAACjB,KAAD,IAAUA,KAAK,KAAK,IAApB,IAA4B,OAAOA,KAAP,KAAkB,WAAlB,KAAkC,WAA9D,IAA6EA,KAAK,KAAK,EAA1F,EAA6F;AACzFG,MAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,QAAAA,OAAO,oBAAaC,SAAb;AADD,OAAV;AAGF;;AAED,QAAGL,MAAM,CAACR,GAAV,EAAc;AACV,UAAGJ,KAAK,CAACkB,MAAN,GAAeN,MAAM,CAACR,GAAzB,EAA6B;AACzBD,QAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOC,SAAP,oCAA0CL,MAAM,CAACR,GAAjD;AADD,SAAV;AAGH;AACJ;;AAED,QAAGQ,MAAM,CAACN,GAAV,EAAc;AACV,UAAGN,KAAK,CAACkB,MAAN,IAAgBN,MAAM,CAACN,GAA1B,EAA8B;AAC1BH,QAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOC,SAAP,oCAA0CL,MAAM,CAACN,GAAjD;AADD,SAAV;AAGH;AACJ;AAGL;;AAED,SAAOH,IAAP;AAIH","sourcesContent":["export default function ValidaForms(campo,$campoName, $rules = {}){\n\n    var erro = [];\n\n    // [\n    //     {$campo, $nomeCampo, $rules}\n    // ]\n\n    $rules = {\n        min: Number,\n        max: Number,\n        type: Boolean & String & Number & Email,\n        required : Boolean // True or False\n    }\n\n\n    if(option.type){\n        if(option.type == Boolean){\n            if(campo !== true){\n                console.log(campo)\n                erro.push({\n                    messege: `O ${campoName} não pode ficar desmarcado.`\n                })\n            }\n        }\n\n    }else{\n\n\n        if(!campo || campo === null || typeof(campo) === 'undefined' === 'undefined' || campo === ''){\n            erro.push({\n                messege: `O campo ${campoName} não pode ficar em branco.`\n            }) \n         }\n     \n         if(option.min){\n             if(campo.lenght < option.min){\n                 erro.push({\n                     messege: `O ${campoName} deve conter no minimo ${option.min} letras.`\n                 })\n             }\n         }\n     \n         if(option.max){\n             if(campo.lenght >= option.max){\n                 erro.push({\n                     messege: `O ${campoName} deve conter no maximo ${option.max} letras.`\n                 })\n             }\n         }\n     \n     \n    }\n\n    return erro;\n\n\n\n}"]},"metadata":{},"sourceType":"module"}