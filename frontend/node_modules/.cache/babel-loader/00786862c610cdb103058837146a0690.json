{"ast":null,"code":"export default async function ValidaForms($data = [{\n  $campo: 'none',\n  $nomeCampo: 'campo',\n  $rules: {}\n}]) {\n  let error = [];\n\n  if (!$data) {\n    error.push('Falha ao validar campos!');\n  }\n\n  const numberCamps = $data.length;\n  console.log($data);\n\n  for (var i = 0; i <= numberCamps; i++) {\n    const _$data$i = $data[i],\n          _$data$i$$campo = _$data$i.$campo,\n          $campo = _$data$i$$campo === void 0 ? 'none' : _$data$i$$campo,\n          $nomeCampo = _$data$i.$nomeCampo,\n          $rules = _$data$i.$rules;\n    await console.log($nomeCampo);\n  } // [\n  //     {$campo, $nomeCampo, $rules}\n  // ]\n  // $rules = {\n  //     min: Number,\n  //     max: Number,\n  //     type: Boolean & String & Number & Email,\n  //     required : Boolean // True or False\n  // }\n  // Retorno\n\n\n  if (error.length === 0) {\n    return false;\n  } else {\n    return error;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/ValidaForms.js"],"names":["ValidaForms","$data","$campo","$nomeCampo","$rules","error","push","numberCamps","length","console","log","i"],"mappings":"AAAA,eAAe,eAAeA,WAAf,CAA2BC,KAAK,GAAG,CAAC;AAACC,EAAAA,MAAM,EAAG,MAAV;AAAkBC,EAAAA,UAAU,EAAG,OAA/B;AAAwCC,EAAAA,MAAM,EAAG;AAAjD,CAAD,CAAnC,EAA0F;AAErG,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAG,CAACJ,KAAJ,EAAU;AACNI,IAAAA,KAAK,CAACC,IAAN,CAAW,0BAAX;AACH;;AAED,QAAMC,WAAW,GAAGN,KAAK,CAACO,MAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,OAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIJ,WAApB,EAAiCI,CAAC,EAAlC,EAAqC;AAAA,qBACaV,KAAK,CAACU,CAAD,CADlB;AAAA,qCAC1BT,MAD0B;AAAA,UAC1BA,MAD0B,gCACjB,MADiB;AAAA,UACTC,UADS,YACTA,UADS;AAAA,UACGC,MADH,YACGA,MADH;AAGjC,UAAMK,OAAO,CAACC,GAAR,CAAYP,UAAZ,CAAN;AACH,GAdoG,CAgBrG;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,MAAGE,KAAK,CAACG,MAAN,KAAiB,CAApB,EAAsB;AAClB,WAAO,KAAP;AACH,GAFD,MAEK;AACD,WAAOH,KAAP;AACH;AAEJ","sourcesContent":["export default async function ValidaForms($data = [{$campo : 'none', $nomeCampo : 'campo', $rules : {}}]){\n\n    let error = [];\n\n    if(!$data){\n        error.push('Falha ao validar campos!');\n    }\n\n    const numberCamps = $data.length;\n    console.log($data)\n    for(var i = 0; i <= numberCamps; i++){\n        const {$campo = 'none', $nomeCampo, $rules} = $data[i];\n\n        await console.log($nomeCampo)\n    }\n\n    // [\n    //     {$campo, $nomeCampo, $rules}\n    // ]\n\n    // $rules = {\n    //     min: Number,\n    //     max: Number,\n    //     type: Boolean & String & Number & Email,\n    //     required : Boolean // True or False\n    // }\n\n\n    // Retorno\n    if(error.length === 0){\n        return false;\n    }else{\n        return error;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}