{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Zero2\\\\Desktop\\\\projeto\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zero2\\\\Desktop\\\\projeto\\\\frontend\\\\src\\\\pages\\\\Galeria\\\\addCategory\\\\index.js\";\nimport React, { useState } from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\nconst user_id = localStorage.getItem('user_id');\nexport default function AddCategory(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCategory = _useState2[0],\n        setNewCategory = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isCategory = _useState4[0],\n        setIsCategory = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertDisplay = _useState6[0],\n        setAlertDisplay = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertMessege = _useState8[0],\n        setAlertMessege = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertTitle = _useState10[0],\n        setAlertTitle = _useState10[1];\n\n  async function handleCategory(e) {\n    e.preventDefault();\n\n    if (!newCategory || typeof newCategory === 'undefined' || newCategory === null || newCategory === '') {\n      setAlertTitle('Falha ao criar nova categoria');\n      setAlertMessege('Não deixe campos em branco.');\n      setAlertDisplay(true);\n    } else {\n      const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id));\n      const result = response.data;\n\n      if (result === null) {\n        const reqData = await axios.post(\"http://localhost:3001/api/category\", {\n          user_id,\n          category: [newCategory]\n        });\n        console.log(reqData);\n      } else {\n        console.log(response);\n        const categoryData = result.category;\n\n        for (var i = 0; categoryData.length <= i; i++) {\n          if (categoryData[i] == newCategory) {\n            setIsCategory(true);\n          }\n\n          console.log(categoryData[i]);\n        }\n\n        console.log(categoryData);\n\n        if (isCategory === false) {\n          console.log('execultou');\n          categoryData.push(newCategory);\n          const reqData = await axios.put(\"http://localhost:3001/api/category/\".concat(user_id), {\n            user_id,\n            category: categoryData\n          });\n        } else {\n          setAlertTitle('Falha ao criar nova categoria');\n          setAlertMessege('Categoria digitada já existe.');\n          setAlertDisplay(true);\n        }\n      }\n    }\n  } // Render\n\n\n  if (props.display === true) {\n    return React.createElement(\"div\", {\n      className: \"galery-addCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Adicinar nova categoria\"), React.createElement(\"button\", {\n      className: \"addCategory-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"addCategory-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Adicione somente as categorias que voc\\xEA ira usar\"), React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: event => setNewCategory(event.target.value),\n      className: \"addCategory-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-salvar\",\n      onClick: handleCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"+\")))), React.createElement(Alert, {\n      display: alertDisplay,\n      title: alertTitle,\n      messege: alertMessege,\n      onClose: event => setAlertDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  }\n}\n;","map":{"version":3,"sources":["C:\\Users\\Zero2\\Desktop\\projeto\\frontend\\src\\pages\\Galeria\\addCategory\\index.js"],"names":["React","useState","Alert","axios","user_id","localStorage","getItem","AddCategory","props","newCategory","setNewCategory","isCategory","setIsCategory","alertDisplay","setAlertDisplay","alertMessege","setAlertMessege","alertTitle","setAlertTitle","handleCategory","e","preventDefault","response","get","result","data","reqData","post","category","console","log","categoryData","i","length","push","put","display","onClose","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Alert from '../../../componentes/Alert';\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nconst user_id = localStorage.getItem('user_id');\r\n\r\nexport default function AddCategory(props){\r\n\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [isCategory, setIsCategory] = useState(false);\r\n\r\n    const [alertDisplay, setAlertDisplay] = useState(false);\r\n    const [alertMessege, setAlertMessege] = useState('');\r\n    const [alertTitle, setAlertTitle] = useState('');\r\n\r\n    async function handleCategory(e){\r\n        e.preventDefault();\r\n\r\n        if(!newCategory || typeof(newCategory) === 'undefined' || newCategory === null || newCategory === ''){\r\n            setAlertTitle('Falha ao criar nova categoria');\r\n            setAlertMessege( 'Não deixe campos em branco.');\r\n            setAlertDisplay(true);\r\n\r\n        }else{\r\n            const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\r\n            const result = response.data;\r\n\r\n            if(result === null){\r\n              \r\n            const reqData = await axios.post(`http://localhost:3001/api/category`, {user_id, category :[newCategory]});\r\n            console.log(reqData);\r\n            }else{\r\n                console.log(response)\r\n                const categoryData = result.category;\r\n                \r\n                for(var i = 0; categoryData.length <= i; i++){\r\n                    if(categoryData[i] == newCategory){\r\n                        setIsCategory(true);\r\n                    }\r\n                    console.log(categoryData[i])\r\n                }\r\n                \r\n                console.log(categoryData)\r\n                if(isCategory === false){\r\n                    console.log('execultou')\r\n                    categoryData.push(newCategory);\r\n                    const reqData = await axios.put(`http://localhost:3001/api/category/${user_id}`, {user_id, category : categoryData});\r\n                }else{\r\n                    setAlertTitle('Falha ao criar nova categoria');\r\n                    setAlertMessege( 'Categoria digitada já existe.');\r\n                    setAlertDisplay(true); \r\n                }\r\n            }\r\n        }\r\n\r\n    \r\n    }\r\n\r\n    // Render\r\n    if(props.display === true){    \r\n        return(\r\n            <div className=\"galery-addCategory\">\r\n                <div className=\"addCategory-content\">\r\n                    <div className=\"addCategory-header\">\r\n                        <h1>Adicinar nova categoria</h1>\r\n                        <button className=\"addCategory-close\" onClick={props.onClose}>X</button>\r\n                    </div>\r\n                    <div className=\"addCategory-body\">\r\n                        <span>Adicione somente as categorias que você ira usar</span>\r\n                        <div className=\"from-group\">\r\n                            <input type=\"text\" placeholder=\"Categoria\" onChange={event => setNewCategory(event.target.value)} className=\"addCategory-input\"/>\r\n                            <button className=\"btn-salvar\" onClick={handleCategory}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Alert display={alertDisplay} title={alertTitle} messege={alertMessege} onClose={event => setAlertDisplay(false)}/>\r\n            </div>\r\n        )\r\n    }else{\r\n        return <div />\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}