{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js\";\nimport React, { useState } from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\nconst user_id = localStorage.getItem('user_id');\nexport default function AddCategory(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCategory = _useState2[0],\n        setNewCategory = _useState2[1]; // Alert\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertDisplay = _useState4[0],\n        setAlertDisplay = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertcontent = _useState6[0],\n        setAlertContent = _useState6[1];\n\n  async function handleCategory(e) {\n    e.preventDefault();\n    const category = newCategory.toLowerCase();\n\n    if (!category || typeof category === 'undefined' || category === null || category === '') {\n      setAlertContent({\n        title: \"Falha ao criar nova categoria\",\n        message: \"Não deixe campos em branco!\",\n        type: \"fail\"\n      });\n      setAlertDisplay(true);\n    } else {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id)); // Verifica o array inteiro\n\n        if (response.data.category === null) {\n          if (!(await axios.post(\"http://localhost:3001/api/category\", {\n            user_id,\n            category: [category]\n          }))) {\n            setAlertContent({\n              title: \"Falha ao criar nova categoria\",\n              message: \"Tente novamente!\",\n              type: \"fail\"\n            });\n            setAlertDisplay(true);\n          } else {\n            setAlertContent({\n              title: \"Sucesso ao criar categoria\",\n              message: \"A categoria foi adicionada a sua lista!\",\n              type: \"sucess\"\n            });\n            setAlertDisplay(true);\n          }\n        } else {\n          const categoryData = response.data.category; // Verifica se existe uma categoria igual no db\n\n          const filterArray = categoryData.filter(function (categoryData) {\n            return categoryData === category;\n          }); // Lembras de converter tudo pra minusculo\n\n          if (!filterArray || filterArray.length === 0) {\n            categoryData.push(category);\n\n            if (!(await axios.put(\"http://localhost:3001/api/category/\".concat(user_id), {\n              user_id,\n              category: categoryData\n            }))) {\n              setAlertContent({\n                title: \"Falha ao criar nova categoria\",\n                message: \"Tente novamente!\",\n                type: \"fail\"\n              });\n              setAlertDisplay(true);\n            } else {\n              setAlertContent({\n                title: \"Sucesso ao criar categoria\",\n                message: \"A categoria foi adicionada a sua lista!\",\n                type: \"sucess\"\n              });\n              setAlertDisplay(true);\n            }\n          } else {\n            setAlertContent({\n              title: \"Falha ao criar nova categoria\",\n              message: \"Categoria digitada já existe!\",\n              type: \"fail\"\n            });\n          }\n        }\n      } catch (error) {\n        // Tratar\n        console.log({\n          error\n        });\n      }\n    }\n  } // Render\n\n\n  if (props.display === true) {\n    return React.createElement(\"div\", {\n      className: \"galery-addCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Adicinar nova categoria\"), React.createElement(\"button\", {\n      className: \"addCategory-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"addCategory-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Adicione somente as categorias que voc\\xEA ira usar\"), React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: event => setNewCategory(event.target.value),\n      className: \"addCategory-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-salvar\",\n      onClick: handleCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"+\")))), React.createElement(Alert, {\n      content: alertcontent,\n      display: alertDisplay,\n      onClose: event => setAlertDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    });\n  }\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js"],"names":["React","useState","Alert","axios","user_id","localStorage","getItem","AddCategory","props","newCategory","setNewCategory","alertDisplay","setAlertDisplay","alertcontent","setAlertContent","handleCategory","e","preventDefault","category","toLowerCase","title","message","type","response","get","data","post","categoryData","filterArray","filter","length","push","put","error","console","log","display","onClose","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function AddCategory(props){\n\n    const [newCategory, setNewCategory] = useState('');\n\n\n    // Alert\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertcontent, setAlertContent] = useState([])\n\n    async function handleCategory(e){\n        e.preventDefault();\n\n        const category = newCategory.toLowerCase();\n\n        if(!category || typeof(category) === 'undefined' || category === null || category === ''){\n            setAlertContent({\n                title: \"Falha ao criar nova categoria\",\n                message: \"Não deixe campos em branco!\",\n                type: \"fail\"\n            })\n            setAlertDisplay(true);\n\n        }else{\n\n            try {\n\n                const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n                // Verifica o array inteiro\n                if(response.data.category === null){\n\n                    if(!await axios.post(`http://localhost:3001/api/category`, {user_id, category :[category]})){\n                        \n                        setAlertContent({\n                            title: \"Falha ao criar nova categoria\",\n                            message: \"Tente novamente!\",\n                            type: \"fail\"\n                        })\n                        setAlertDisplay(true);\n                    }else{\n                        setAlertContent({\n                            title: \"Sucesso ao criar categoria\",\n                            message: \"A categoria foi adicionada a sua lista!\",\n                            type: \"sucess\"\n                        })\n                        setAlertDisplay(true);\n                    }\n                }else{\n                    const categoryData = response.data.category;\n\n\n                    // Verifica se existe uma categoria igual no db\n                    const filterArray = categoryData.filter(function(categoryData) {\n                        return categoryData === category\n                    })\n                \n                    // Lembras de converter tudo pra minusculo\n                    if(!filterArray || filterArray.length === 0){\n\n                        categoryData.push(category);\n\n                        if(!await axios.put(`http://localhost:3001/api/category/${user_id}`, {user_id, category : categoryData})){\n\n                            setAlertContent({\n                                title: \"Falha ao criar nova categoria\",\n                                message: \"Tente novamente!\",\n                                type: \"fail\"\n                            })\n                            setAlertDisplay(true);\n                        }else{\n\n                            setAlertContent({\n                                title: \"Sucesso ao criar categoria\",\n                                message: \"A categoria foi adicionada a sua lista!\",\n                                type: \"sucess\"\n                            })\n                            setAlertDisplay(true);\n                        }\n                    }else{\n                        setAlertContent({\n                            title: \"Falha ao criar nova categoria\",\n                            message: \"Categoria digitada já existe!\",\n                            type: \"fail\"\n                        })\n                    }\n                }\n\n            } catch (error) {\n                // Tratar\n                console.log({error})\n            }\n\n\n        }\n\n    \n    }\n\n    // Render\n    if(props.display === true){    \n        return(\n            <div className=\"galery-addCategory\">\n                <div className=\"addCategory-content\">\n                    <div className=\"addCategory-header\">\n                        <h1>Adicinar nova categoria</h1>\n                        <button className=\"addCategory-close\" onClick={props.onClose}>X</button>\n                    </div>\n                    <div className=\"addCategory-body\">\n                        <span>Adicione somente as categorias que você ira usar</span>\n                        <div className=\"from-group\">\n                            <input type=\"text\" placeholder=\"Categoria\" onChange={event => setNewCategory(event.target.value)} className=\"addCategory-input\"/>\n                            <button className=\"btn-salvar\" onClick={handleCategory}>+</button>\n                        </div>\n                    </div>\n                </div>\n                <Alert  content={alertcontent} display={alertDisplay} onClose={event => setAlertDisplay(false)}/>\n            </div>\n        )\n    }else{\n        return <div />\n    }\n};"]},"metadata":{},"sourceType":"module"}