{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js\";\nimport React, { useState } from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\nconst user_id = localStorage.getItem('user_id');\nexport default function AddCategory(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCategory = _useState2[0],\n        setNewCategory = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertDisplay = _useState4[0],\n        setAlertDisplay = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertMessege = _useState6[0],\n        setAlertMessege = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertTitle = _useState8[0],\n        setAlertTitle = _useState8[1];\n\n  async function handleCategory(e) {\n    e.preventDefault();\n\n    if (!newCategory || typeof newCategory === 'undefined' || newCategory === null || newCategory === '') {\n      setAlertTitle('Falha ao criar nova categoria');\n      setAlertMessege('Não deixe campos em branco.');\n      setAlertDisplay(true);\n    } else {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/category/\".concat(user_id)); // Verifica o array inteiro\n\n        if (response.data.category === null) {\n          if (!(await axios.post(\"http://localhost:3001/api/category\", {\n            user_id,\n            category: [newCategory]\n          }))) {\n            console.log('Erro ao criar categoria');\n          }\n        } else {\n          const categoryData = response.data.category; // Verifica se existe uma categoria igual no db\n\n          const filterArray = categoryData.filter(function (categoryData) {\n            return categoryData == newCategory;\n          });\n\n          if (!filterArray || filterArray.length === 0) {\n            categoryData.push(newCategory);\n\n            if (!(await axios.put(\"http://localhost:3001/api/category/\".concat(user_id), {\n              user_id,\n              category: categoryData\n            }))) {\n              console.log('Erro ao adicionar categoria a lista');\n            }\n          } else {\n            setAlertTitle('Falha ao criar nova categoria');\n            setAlertMessege('Categoria digitada já existe.');\n            setAlertDisplay(true);\n          }\n        }\n      } catch (error) {\n        console.log({\n          error\n        });\n      }\n    }\n  } // Render\n\n\n  if (props.display === true) {\n    return React.createElement(\"div\", {\n      className: \"galery-addCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addCategory-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Adicinar nova categoria\"), React.createElement(\"button\", {\n      className: \"addCategory-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"addCategory-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Adicione somente as categorias que voc\\xEA ira usar\"), React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Categoria\",\n      onChange: event => setNewCategory(event.target.value),\n      className: \"addCategory-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-salvar\",\n      onClick: handleCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"+\")))), React.createElement(Alert, {\n      display: alertDisplay,\n      title: alertTitle,\n      messege: alertMessege,\n      onClose: event => setAlertDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n  }\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/pages/Galeria/addCategory/index.js"],"names":["React","useState","Alert","axios","user_id","localStorage","getItem","AddCategory","props","newCategory","setNewCategory","alertDisplay","setAlertDisplay","alertMessege","setAlertMessege","alertTitle","setAlertTitle","handleCategory","e","preventDefault","response","get","data","category","post","console","log","categoryData","filterArray","filter","length","push","put","error","display","onClose","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Alert from '../../../componentes/Alert';\nimport axios from 'axios';\nimport './style.css';\n\nconst user_id = localStorage.getItem('user_id');\n\nexport default function AddCategory(props){\n\n    const [newCategory, setNewCategory] = useState('');\n\n    const [alertDisplay, setAlertDisplay] = useState(false);\n    const [alertMessege, setAlertMessege] = useState('');\n    const [alertTitle, setAlertTitle] = useState('');\n\n    async function handleCategory(e){\n        e.preventDefault();\n\n        if(!newCategory || typeof(newCategory) === 'undefined' || newCategory === null || newCategory === ''){\n            setAlertTitle('Falha ao criar nova categoria');\n            setAlertMessege( 'Não deixe campos em branco.');\n            setAlertDisplay(true);\n\n        }else{\n\n            try {\n\n                const response = await axios.get(`http://localhost:3001/api/category/${user_id}`);\n\n                // Verifica o array inteiro\n                if(response.data.category === null){\n\n                    if(!await axios.post(`http://localhost:3001/api/category`, {user_id, category :[newCategory]})){\n                        console.log('Erro ao criar categoria')\n                    }\n                }else{\n                    const categoryData = response.data.category;\n\n\n                    // Verifica se existe uma categoria igual no db\n                    const filterArray = categoryData.filter(function(categoryData) {\n                        return categoryData == newCategory\n                    })\n                \n\n                    if(!filterArray || filterArray.length === 0){\n\n                        categoryData.push(newCategory);\n\n                        if(!await axios.put(`http://localhost:3001/api/category/${user_id}`, {user_id, category : categoryData})){\n                            console.log('Erro ao adicionar categoria a lista');\n                        }\n                    }else{\n                        setAlertTitle('Falha ao criar nova categoria');\n                        setAlertMessege( 'Categoria digitada já existe.');\n                        setAlertDisplay(true); \n                    }\n                }\n\n            } catch (error) {\n                console.log({error})\n            }\n\n\n        }\n\n    \n    }\n\n    // Render\n    if(props.display === true){    \n        return(\n            <div className=\"galery-addCategory\">\n                <div className=\"addCategory-content\">\n                    <div className=\"addCategory-header\">\n                        <h1>Adicinar nova categoria</h1>\n                        <button className=\"addCategory-close\" onClick={props.onClose}>X</button>\n                    </div>\n                    <div className=\"addCategory-body\">\n                        <span>Adicione somente as categorias que você ira usar</span>\n                        <div className=\"from-group\">\n                            <input type=\"text\" placeholder=\"Categoria\" onChange={event => setNewCategory(event.target.value)} className=\"addCategory-input\"/>\n                            <button className=\"btn-salvar\" onClick={handleCategory}>+</button>\n                        </div>\n                    </div>\n                </div>\n                <Alert display={alertDisplay} title={alertTitle} messege={alertMessege} onClose={event => setAlertDisplay(false)}/>\n            </div>\n        )\n    }else{\n        return <div />\n    }\n};"]},"metadata":{},"sourceType":"module"}