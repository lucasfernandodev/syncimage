{"ast":null,"code":"function limiter($campo, $min = '', $max = '') {\n  if ($min !== '') {\n    if ($campo.length <= $min) {\n      return false;\n    }\n  }\n\n  if ($max !== '') {\n    if ($campo.length >= $max) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default async function ValidaForms($data = []) {\n  let error = [];\n\n  if (!$data) {\n    error.push('Falha ao validar campos!');\n  }\n\n  const numberCamps = $data.length;\n\n  for (var i = 0; i < numberCamps; i++) {\n    const _$data$i = $data[i],\n          $campo = _$data$i.$campo,\n          $nomeCampo = _$data$i.$nomeCampo,\n          $rules = _$data$i.$rules;\n\n    if ($rules) {\n      if ($rules.required === true) {\n        if ($rules.type === String) {}\n      }\n    }\n\n    console.log(\"O campo \\xE9 \".concat($nomeCampo, \" e o id \\xE9 \").concat(i));\n  } // [\n  //     {$campo, $nomeCampo, $rules}\n  // ]\n  // $rules = {\n  //     min: Number,\n  //     max: Number,\n  //     type: Boolean & String & Number & Email,\n  //     required : Boolean // True or False\n  // }\n  // Retorno\n\n\n  if (error.length === 0) {\n    return false;\n  } else {\n    return error;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/ValidaForms.js"],"names":["limiter","$campo","$min","$max","length","ValidaForms","$data","error","push","numberCamps","i","$nomeCampo","$rules","required","type","String","console","log"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,IAAI,GAAG,EAAhC,EAAoCC,IAAI,GAAG,EAA3C,EAA8C;AAC1C,MAAGD,IAAI,KAAK,EAAZ,EAAe;AACX,QAAGD,MAAM,CAACG,MAAP,IAAiBF,IAApB,EAAyB;AACrB,aAAO,KAAP;AACH;AACJ;;AAED,MAAGC,IAAI,KAAK,EAAZ,EAAe;AACX,QAAGF,MAAM,CAACG,MAAP,IAAiBD,IAApB,EAAyB;AACrB,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,eAAe,eAAeE,WAAf,CAA2BC,KAAK,GAAG,EAAnC,EAAsC;AAEjD,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAG,CAACD,KAAJ,EAAU;AACNC,IAAAA,KAAK,CAACC,IAAN,CAAW,0BAAX;AACH;;AAED,QAAMC,WAAW,GAAGH,KAAK,CAACF,MAA1B;;AAGA,OAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,WAAnB,EAAgCC,CAAC,EAAjC,EAAoC;AAAA,qBACKJ,KAAK,CAACI,CAAD,CADV;AAAA,UACzBT,MADyB,YACzBA,MADyB;AAAA,UACjBU,UADiB,YACjBA,UADiB;AAAA,UACLC,MADK,YACLA,MADK;;AAGhC,QAAGA,MAAH,EAAU;AACN,UAAGA,MAAM,CAACC,QAAP,KAAoB,IAAvB,EACA;AACI,YAAGD,MAAM,CAACE,IAAP,KAAgBC,MAAnB,EAA0B,CAEzB;AACJ;AACJ;;AAEDC,IAAAA,OAAO,CAACC,GAAR,wBAAyBN,UAAzB,0BAAgDD,CAAhD;AACH,GAxBgD,CA0BjD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,MAAGH,KAAK,CAACH,MAAN,KAAiB,CAApB,EAAsB;AAClB,WAAO,KAAP;AACH,GAFD,MAEK;AACD,WAAOG,KAAP;AACH;AAEJ","sourcesContent":["function limiter($campo, $min = '', $max = ''){\n    if($min !== ''){\n        if($campo.length <= $min){\n            return false;\n        }\n    }\n\n    if($max !== ''){\n        if($campo.length >= $max){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport default async function ValidaForms($data = []){\n\n    let error = [];\n\n    if(!$data){\n        error.push('Falha ao validar campos!');\n    }\n\n    const numberCamps = $data.length;\n\n\n    for(var i = 0; i < numberCamps; i++){\n        const {$campo, $nomeCampo, $rules} = $data[i];\n\n        if($rules){\n            if($rules.required === true)\n            {\n                if($rules.type === String){\n                    \n                }\n            }\n        }\n\n        console.log(`O campo é ${$nomeCampo} e o id é ${i}`)\n    }\n\n    // [\n    //     {$campo, $nomeCampo, $rules}\n    // ]\n\n    // $rules = {\n    //     min: Number,\n    //     max: Number,\n    //     type: Boolean & String & Number & Email,\n    //     required : Boolean // True or False\n    // }\n\n\n    // Retorno\n    if(error.length === 0){\n        return false;\n    }else{\n        return error;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}