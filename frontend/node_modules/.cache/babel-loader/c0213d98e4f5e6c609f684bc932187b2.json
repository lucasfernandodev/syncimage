{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Alert/index.js\";\nimport React, { useState } from \"react\";\nimport \"./style.css\";\n\nfunction Alert(props) {\n  const _useState = useState('primary'),\n        _useState2 = _slicedToArray(_useState, 2),\n        type = _useState2[0],\n        setType = _useState2[1];\n\n  if (props.type) {\n    if (typeof props.type !== 'undefined') {\n      const type = props.type;\n    }\n  }\n\n  if (props.display) {\n    return React.createElement(\"div\", {\n      className: type === 'fail' ? 'document-alert fail' : 'document-alert' | type === 'sucess' ? 'document-alert sucess' : 'document-alert' | type === 'primary' ? 'document-alert primary' : 'document-alert' | type === 'warning' ? 'document-alert warning' : 'document-alert',\n      style: {\n        display: props.display\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"alert-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, props.title), React.createElement(\"div\", {\n      className: \"alert-btn-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"alert-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"alert-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, props.messege)));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n}\n\nexport default Alert;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Alert/index.js"],"names":["React","useState","Alert","props","type","setType","display","title","onClose","messege"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBAEMF,QAAQ,CAAC,SAAD,CAFd;AAAA;AAAA,QAEXG,IAFW;AAAA,QAELC,OAFK;;AAIlB,MAAGF,KAAK,CAACC,IAAT,EAAc;AACV,QAAG,OAAOD,KAAK,CAACC,IAAb,KAAuB,WAA1B,EAAsC;AAClC,YAAMA,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACH;AACJ;;AAED,MAAGD,KAAK,CAACG,OAAT,EAAiB;AACb,WAEQ;AACA,MAAA,SAAS,EACLF,IAAI,KAAK,MAAT,GAAkB,qBAAlB,GAA0C,mBAC1CA,IAAI,KAAK,QADiC,GACtB,uBADsB,GACI,mBAC9CA,IAAI,KAAK,SADqC,GACzB,wBADyB,GACE,mBAChDA,IAAI,KAAK,SADuC,GAC3B,wBAD2B,GACA,gBALpD;AAOA,MAAA,KAAK,EAAE;AAACE,QAAAA,OAAO,EAAEH,KAAK,CAACG;AAAhB,OAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,KAAK,CAACI,KAAnC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAVJ,EAcI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,KAAK,CAACM,OADX,CADJ,CAdJ,CAFR;AAwBH,GAzBD,MAyBK;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AAEJ;;AAED,eAAeP,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./style.css\";\n\nfunction Alert(props) {\n\n    const [type, setType] = useState('primary')\n\n    if(props.type){\n        if(typeof(props.type) !== 'undefined'){\n            const type = props.type;\n        }\n    }\n        \n    if(props.display){\n        return (\n\n                <div \n                className={\n                    type === 'fail' ? 'document-alert fail' : 'document-alert' |\n                    type === 'sucess' ? 'document-alert sucess' : 'document-alert' |\n                    type === 'primary' ? 'document-alert primary' : 'document-alert' |\n                    type === 'warning' ? 'document-alert warning' : 'document-alert'\n                }\n                style={{display: props.display}}\n                >\n\n                    <div className=\"alert-header\">\n                        <h3 className=\"alert-title\">{props.title}</h3>\n                        <div className=\"alert-btn-close\" onClick={props.onClose}>X</div>\n                    </div>\n                    <div className=\"alert-body\">\n                        <p className=\"alert-description\">\n                            {props.messege}\n                        </p>\n                    </div>\n                </div>\n\n        )\n    }else{\n        return <div />\n    }\n    \n}\n\nexport default Alert;"]},"metadata":{},"sourceType":"module"}