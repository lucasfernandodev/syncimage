{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/index.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Config from \"./Config\";\nimport './style.css';\nimport camera from \"../../assets/camera.svg\";\nexport default function Upload(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        configMenu = _useState4[0],\n        setConfigMenu = _useState4[1]; // Gera um preview da imagem\n\n\n  const preview = useMemo(() => {\n    return image ? URL.createObjectURL(image) : image;\n  }, [image]);\n\n  if (props.display) {\n    return React.createElement(\"div\", {\n      className: \"modal-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"upload-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Selecionar imagem\"), React.createElement(\"div\", {\n      className: \"btn-close\",\n      onClick: props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"container-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"upload\",\n      id: \"uploadcontent\",\n      style: {\n        backgroundImage: \"url(\".concat(preview, \")\")\n      },\n      className: preview ? 'has-image upload' : 'upload',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"upload\",\n      onChange: event => setImage(event.target.files[0]),\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: camera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Escolher imagem\"))), React.createElement(\"div\", {\n      className: \"container-config\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      onClick: event => setConfigMenu('option'),\n      className: configMenu === 'option' ? \"select\" : \"\" || configMenu === '' ? \"select\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Op\\xE7\\xF5es\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      onClick: event => setConfigMenu('description'),\n      className: configMenu === 'description' ? \"select\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      onClick: event => setConfigMenu('avancado'),\n      className: configMenu == 'avancado' ? \"select\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Avan\\xE7ado\")))), React.createElement(Config, {\n      name: configMenu,\n      data: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/Upload/index.js"],"names":["React","useState","useMemo","useEffect","Config","Upload","props","image","setImage","configMenu","setConfigMenu","preview","URL","createObjectURL","display","onClose","backgroundImage","event","target","files","camera"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport Config from \"./Config\";\n\nimport './style.css';\nimport camera from '../../assets/camera.svg';\n\nexport default function Upload(props) {\n    const [image, setImage] = useState(null);\n    const [configMenu, setConfigMenu] = useState('');\n\n    // Gera um preview da imagem\n    const preview = useMemo(\n        () => {\n            return image ? URL.createObjectURL(image) : image\n        }, [image]\n    )\n\n    if(props.display){\n        return (\n            <div className=\"modal-upload\">\n                <form className=\"upload-container\">\n                    <div className=\"form-header\">\n                        <h1>Selecionar imagem</h1>\n                        <div className=\"btn-close\"  onClick={props.onClose}>X</div>\n                    </div>\n                    <div className=\"container-upload\">\n                        <label \n                            htmlFor=\"upload\" \n                            id='uploadcontent'\n                            style={{ backgroundImage: `url(${preview})` }} \n                            className={preview ? 'has-image upload' : 'upload'}\n                        >\n                            <input type=\"file\" id=\"upload\" onChange={event => setImage(event.target.files[0])} accept=\"image/*\" />\n                            <img src={camera}/>\n                            <span>Escolher imagem</span>\n                        </label>\n                    </div>\n                    <div className=\"container-config\">\n                        <div className=\"content\">\n                            <div className=\"config-header\">\n                                <ul>\n                                    <li>\n                                        <h3 \n                                        onClick={event => setConfigMenu('option')}\n                                        className={configMenu === 'option' ? \"select\" : \"\" || configMenu === '' ? \"select\" : \"\"}>Opções</h3>\n                                    </li>\n                                    <li>\n                                        <h3\n                                        onClick={event => setConfigMenu('description')}\n                                        className={configMenu === 'description' ? \"select\" : \"\"}>Descrição</h3>\n                                    </li>\n                                    <li>\n                                        <h3\n                                        onClick={event => setConfigMenu('avancado')}\n                                        className={configMenu == 'avancado' ? \"select\" : \"\"}>Avançado</h3>\n                                    </li>\n                                </ul>\n                            </div>\n    \n                            <Config name={configMenu} data={image}/>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }else{\n        return <div />\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}