{"ast":null,"code":"export default function ValidaForms(campo, campoName, option = {}) {\n  var erro = [];\n\n  if (option.type) {\n    if (option.type == Boolean) {\n      if (campo !== true) {\n        console.log(campo);\n        erro.push({\n          messege: \"O \".concat(campoName, \" n\\xE3o pode ficar desmarcado.\")\n        });\n      }\n    }\n  } else {\n    if (!campo || campo === null || typeof campo === 'undefined' === 'undefined') {\n      erro.push({\n        messege: \"O campo \".concat(campoName, \" n\\xE3o pode ficar em branco.\")\n      });\n    }\n\n    if (option.min) {\n      if (campo.lenght < option.min) {\n        erro.push({\n          messege: \"O \".concat(campoName, \" deve conter no minimo \").concat(option.min, \" letras.\")\n        });\n      }\n    }\n\n    if (option.max) {\n      if (campo.lenght >= option.max) {\n        erro.push({\n          messege: \"O \".concat(campoName, \" deve conter no maximo \").concat(option.max, \" letras.\")\n        });\n      }\n    }\n  }\n\n  return erro;\n}","map":{"version":3,"sources":["C:\\Users\\Zero2\\Desktop\\projeto\\frontend\\src\\componentes\\ValidaForms.js"],"names":["ValidaForms","campo","campoName","option","erro","type","Boolean","console","log","push","messege","min","lenght","max"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,KAArB,EAA2BC,SAA3B,EAAsCC,MAAM,GAAG,EAA/C,EAAkD;AAE7D,MAAIC,IAAI,GAAG,EAAX;;AAGA,MAAGD,MAAM,CAACE,IAAV,EAAe;AACX,QAAGF,MAAM,CAACE,IAAP,IAAeC,OAAlB,EAA0B;AACtB,UAAGL,KAAK,KAAK,IAAb,EAAkB;AACdM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAG,QAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOR,SAAP;AADD,SAAV;AAGH;AACJ;AAEJ,GAVD,MAUK;AAGD,QAAG,CAACD,KAAD,IAAUA,KAAK,KAAK,IAApB,IAA4B,OAAOA,KAAP,KAAkB,WAAlB,KAAkC,WAAjE,EAA6E;AACzEG,MAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,QAAAA,OAAO,oBAAaR,SAAb;AADD,OAAV;AAGF;;AAED,QAAGC,MAAM,CAACQ,GAAV,EAAc;AACV,UAAGV,KAAK,CAACW,MAAN,GAAeT,MAAM,CAACQ,GAAzB,EAA6B;AACzBP,QAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOR,SAAP,oCAA0CC,MAAM,CAACQ,GAAjD;AADD,SAAV;AAGH;AACJ;;AAED,QAAGR,MAAM,CAACU,GAAV,EAAc;AACV,UAAGZ,KAAK,CAACW,MAAN,IAAgBT,MAAM,CAACU,GAA1B,EAA8B;AAC1BT,QAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,UAAAA,OAAO,cAAOR,SAAP,oCAA0CC,MAAM,CAACU,GAAjD;AADD,SAAV;AAGH;AACJ;AAGL;;AAED,SAAOT,IAAP;AAIH","sourcesContent":["export default function ValidaForms(campo,campoName, option = {}){\r\n\r\n    var erro = [];\r\n\r\n\r\n    if(option.type){\r\n        if(option.type == Boolean){\r\n            if(campo !== true){\r\n                console.log(campo)\r\n                erro.push({\r\n                    messege: `O ${campoName} não pode ficar desmarcado.`\r\n                })\r\n            }\r\n        }\r\n\r\n    }else{\r\n\r\n\r\n        if(!campo || campo === null || typeof(campo) === 'undefined' === 'undefined'){\r\n            erro.push({\r\n                messege: `O campo ${campoName} não pode ficar em branco.`\r\n            }) \r\n         }\r\n     \r\n         if(option.min){\r\n             if(campo.lenght < option.min){\r\n                 erro.push({\r\n                     messege: `O ${campoName} deve conter no minimo ${option.min} letras.`\r\n                 })\r\n             }\r\n         }\r\n     \r\n         if(option.max){\r\n             if(campo.lenght >= option.max){\r\n                 erro.push({\r\n                     messege: `O ${campoName} deve conter no maximo ${option.max} letras.`\r\n                 })\r\n             }\r\n         }\r\n     \r\n     \r\n    }\r\n\r\n    return erro;\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}