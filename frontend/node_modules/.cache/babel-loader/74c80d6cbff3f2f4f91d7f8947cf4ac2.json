{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/teste/project/syncimage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/LoadingImages/index.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nconst user_id = localStorage.getItem(\"user_id\");\nexport default function LoadingImages() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        listItems = _useState2[0],\n        setListItems = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imagesTrue = _useState4[0],\n        setImagesTrue = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isFetching = _useState6[0],\n        setIsFetching = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentPage = _useState8[0],\n        setCurrentPage = _useState8[1];\n\n  useMemo(() => {\n    (async function () {\n      try {\n        // Busca as imagens\n        const response = await axios.get(\"http://localhost:3001/api/image/\".concat(user_id)); // Salva todas as imagens\n\n        setImagesTrue(response.data); // Carrega as 6 primeiras imagens\n\n        const data = response.data;\n        const currentImages = data.slice(0, 6);\n        setListItems(currentImages);\n      } catch (error) {\n        console.log({\n          error\n        });\n      }\n    })();\n  }, []); // Captura o evento de scroll\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []); // Verifica se é pra carregar mais imagens\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  function fetchMoreListItems() {\n    const imagesporpage = 6;\n    const maxArray = imagesTrue.length - 1;\n\n    if (maxArray >= currentPage) {\n      const indexOfLastImage = currentPage * imagesporpage;\n      const currentImages = imagesTrue.slice(0, indexOfLastImage);\n      setListItems(currentImages);\n      var i = currentPage + 1;\n      setCurrentPage(i);\n      setIsFetching(false);\n    } else {\n      setIsFetching(false);\n    }\n  }\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n    setIsFetching(true);\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"content-galeria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, listItems ? listItems.map(item => React.createElement(\"li\", {\n    className: \"card-image\",\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.link,\n    alt: item.title,\n    className: \"card-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))) : '');\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/teste/project/syncimage/frontend/src/componentes/LoadingImages/index.js"],"names":["React","useState","useEffect","useMemo","axios","user_id","localStorage","getItem","LoadingImages","listItems","setListItems","imagesTrue","setImagesTrue","isFetching","setIsFetching","currentPage","setCurrentPage","response","get","data","currentImages","slice","error","console","log","window","addEventListener","handleScroll","removeEventListener","fetchMoreListItems","imagesporpage","maxArray","length","indexOfLastImage","i","innerHeight","document","documentElement","scrollTop","offsetHeight","map","item","_id","link","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst user_id = localStorage.getItem(\"user_id\");\r\n\r\nexport default function LoadingImages() {\r\n    const [listItems, setListItems] = useState(null);\r\n    const [imagesTrue, setImagesTrue] = useState(null)\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useMemo(() => {\r\n\r\n        (async function () {\r\n            try {\r\n                // Busca as imagens\r\n                const response = await axios.get(`http://localhost:3001/api/image/${user_id}`);\r\n\r\n                // Salva todas as imagens\r\n                setImagesTrue(response.data);\r\n\r\n                // Carrega as 6 primeiras imagens\r\n                const data = response.data;\r\n                const currentImages = data.slice(0, 6);\r\n                setListItems(currentImages);\r\n\r\n            } catch (error) {\r\n                console.log({error})\r\n            }\r\n\r\n        }());\r\n    }, [])\r\n\r\n    // Captura o evento de scroll\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    // Verifica se é pra carregar mais imagens\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        fetchMoreListItems();\r\n      }, [isFetching]);\r\n\r\n      \r\n      function fetchMoreListItems() {\r\n          const imagesporpage = 6;\r\n          const maxArray = imagesTrue.length - 1 ;\r\n\r\n          if(maxArray >= currentPage){\r\n            const indexOfLastImage = currentPage * imagesporpage;\r\n            const currentImages = imagesTrue.slice(0, indexOfLastImage);\r\n  \r\n\r\n            setListItems(currentImages);\r\n            var i = currentPage + 1;\r\n            setCurrentPage(i)\r\n            setIsFetching(false);\r\n          }else{\r\n            setIsFetching(false);\r\n          }\r\n          \r\n      }\r\n\r\n    function handleScroll() {\r\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\r\n        setIsFetching(true);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <ul className=\"content-galeria\">\r\n            {listItems ? listItems.map(item => (\r\n\r\n                <li className=\"card-image\" key={item._id}>\r\n                    <img src={item.link} alt={item.title} className=\"card-img\" />\r\n                </li>\r\n            )) : ''}\r\n        </ul>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}